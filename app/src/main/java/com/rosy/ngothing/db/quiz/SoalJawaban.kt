package com.rosy.ngothing.db.quiz

object SoalJawaban {
    private val scriptsMap = mapOf(
        "Python" to mapOf(
            "basic" to mapOf(
                "Tipe Data dan Variabel" to listOf(
                    "x = 7\n" + "y = 3\n" + "z = x // y\n" + "print(z)",
                    "a = 10\n" + "b = 5\n" + "c = a * b\n" + "print(c)",
                    "name = \"Alice\"\n" + "age = 25\n" + "print(name + \" is \" + str(age) + \" years old.\")",
                    "a = 15\n" + "b = 30\n" + "b = a\n" + "a = 10\n" + "print(b)",
                    "x = \"10\"\n" + "y = int(x) + 5\n" + "print(y)",
                    "numbers = [1, 2, 3, 4, 5]\n" + "print(numbers[2])",
                    "a = \"Hello\"\n" + "b = \"World\"\n" + "print(a + \" \" + b)",
                    "x = 5\n" + "y = x ** 2\n" + "print(y)",
                    "x = 10\n" + "y = 2.5\n" + "z = x * y\n" + "print(z)",
                    "a = 15\n" + "b = 5\n" + "c = a / b\n" + "print(c)",
                    "x = 8\n" + "y = x % 3\n" + "print(y)",
                    "name = \"Bob\"\n" + "name = name.lower()\n" + "print(name)",
                    "x = \"Python\"\n" + "print(len(x))",
                    "x = \"123\"\n" + "y = int(x) + 7\n" + "print(y)",
                    "a = 10\n" + "b = 3\n" + "c = a % b\n" + "print(c)"
                ),
                "Tipe Data List" to listOf(
                    "fruits = [\"apple\", \"banana\", \"cherry\"]\n" + "print(fruits[1])",
                    "numbers = [1, 2, 3, 4, 5]\n" + "numbers.append(6)\n" + "print(numbers).",
                    "letters = [\"a\", \"b\", \"c\", \"d\"]\n" + "letters.remove(\"c\")\n" + "print(letters)",
                    "nums = [10, 20, 30]\n" + "nums[1] = 25\n" + "print(nums)",
                    "my_list = [1, 2, 3]\n" + "new_list = my_list + [4, 5]\n" + "print(new_list)",
                    "items = [\"item1\", \"item2\", \"item3\"]\n" + "items.insert(1, \"item4\")\n" + "print(items)",
                    "list1 = [10, 20, 30]\n" + "list2 = [40, 50]\n" + "list1.extend(list2)\n" + "print(list1)",
                    "nums = [100, 200, 300]\n" + "nums.pop(1)\n" + "print(nums)",
                    "a = [1, 2, 3]\n" + "b = a\n" + "b[0] = 5\n" + "print(a)",
                    "colors = [\"red\", \"green\", \"blue\"]\n" + "print(colors[-1])",
                    "numbers = [1, 2, 3, 4, 5]\n" + "sliced = numbers[1:4]\n" + "print(sliced)",
                    "nums = [10, 20, 30, 40]\n" + "del nums[2]\n" + "print(nums)",
                    "languages = [\"Python\", \"Java\", \"C++\"]\n" + "print(\"Python\" in languages)",
                    "numbers = [5, 3, 9, 1]\n" + "numbers.sort()\n" + "print(numbers)",
                    "a = [1, 2, 3]\n" + "b = [4, 5, 6]\n" + "c = [a, b]\n" + "print(c)"
                ),
                "Tipe Data Tupple" to listOf(
                    "tup = (1, 2, 3, 4)\nprint(tup[0])\n",
                    "tup = (1, 2, 3, 4)\nprint(tup[-1])\n",
                    "tup = (1, 2, 3, 4)\nprint(len(tup))\n",
                    "tup = (1, 2, 3, 4)\nprint(tup[1:3])\n",
                    "tup = (1, 2, 3, 4)\nprint(tup + (5,))\n",
                    "tup1 = (1, 2, 3)\ntup2 = (4, 5, 6)\nprint(tup1 + tup2)\n",
                    "tup = (1, 2, 3, 4)\nprint(2 in tup)\n",
                    "tup = (1, 2, 3, 4)\nprint(5 in tup)\n",
                    "tup = (1, 2, 3, 4)\na, b, c, d = tup\nprint(b)\n",
                    "tup = (1, 2, 3, 4)\nprint(tup.index(3))\n",
                    "tup = (1, 2, 3, 4)\nprint(tup.count(2))\n",
                    "tup = (1, 2, 3, 4)\ntup = tup + (5, 6)\nprint(tup)\n",
                    "tup = (1, 2, 3, 4)\nprint(tup * 2)\n",
                    "tup = (1, 2, 3, 4)\ntry:\n    tup[0] = 5\nexcept TypeError:\n    print(\"Error\")\n",
                    "tup = (1, 2, 3, 4)\nprint(min(tup))\n"
                ),
                "Input dan Output" to listOf(
                    "name = input('Enter your name: ')\nprint('Hello, ' + name)\n",
                    "age = input('Enter your age: ')\nprint('You are ' + age + ' years old')\n",
                    "num1 = int(input('Enter first number: '))\nnum2 = int(input('Enter second number: '))\nprint('Sum: ', num1 + num2)\n",
                    "num1 = float(input('Enter first number: '))\nnum2 = float(input('Enter second number: '))\nprint('Product: ', num1 * num2)\n",
                    "print('Python', 'is', 'fun', sep='-')\n",
                    "print('First line', end=' ')\nprint('Second line')\n",
                    "name = 'Alice'\nage = 25\nprint(f'My name is {name} and I am {age} years old')\n",
                    "print('Hello {0}, you are {1} years old'.format('Bob', 30))\n",
                    "data = {'name': 'Charlie', 'age': 35}\nprint('Hello {name}, you are {age} years old'.format(**data))\n",
                    "print('The value of pi is approximately {:.2f}'.format(3.14159))\n",
                    "name = input('Enter your name: ')\nage = input('Enter your age: ')\nprint('Hello, {}. You are {}.'.format(name, age))\n",
                    "a = input('Enter a number: ')\nprint(f'The number you entered is {a}')\n",
                    "print('Learning', 'Python', 'is', 'easy!', sep='*')\n",
                    "print('Good', end='...')\nprint('Morning')\n",
                    "name = input('What is your name? ')\nprint(f'Nice to meet you, {name}!')\n"
                ),
                "Percabangan" to listOf(
                    "x = 5\nif x > 0:\n    print('Positive')\n",
                    "x = -3\nif x > 0:\n    print('Positive')\nelse:\n    print('Negative')\n",
                    "x = 10\ny = 5\nif x > y:\n    print('x is greater than y')\n",
                    "x = 10\ny = 20\nif x > y:\n    print('x is greater than y')\nelse:\n    print('x is not greater than y')\n",
                    "x = 10\ny = 10\nif x == y:\n    print('x is equal to y')\n",
                    "x = 15\ny = 10\nif x >= y:\n    print('x is greater than or equal to y')\n",
                    "x = 5\nif x % 2 == 0:\n    print('Even')\nelse:\n    print('Odd')\n",
                    "x = 0\nif x > 0:\n    print('Positive')\nelif x < 0:\n    print('Negative')\nelse:\n    print('Zero')\n",
                    "x = 20\ny = 30\nif x > y:\n    print('x is greater than y')\nelif x < y:\n    print('x is less than y')\nelse:\n    print('x is equal to y')\n",
                    "age = 18\nif age >= 18:\n    print('Adult')\nelse:\n    print('Not an adult')\n",
                    "marks = 85\nif marks >= 90:\n    grade = 'A'\nelif marks >= 80:\n    grade = 'B'\nelse:\n    grade = 'C'\nprint(grade)\n",
                    "x = 7\ny = 10\nif x > y:\n    print('x is greater than y')\nelif x < y:\n    print('x is less than y')\nelse:\n    print('x is equal to y')\n",
                    "day = 'Monday'\nif day == 'Saturday' or day == 'Sunday':\n    print('Weekend')\nelse:\n    print('Weekday')\n",
                    "num = 4\nif num % 2 == 0 and num % 3 == 0:\n    print('Divisible by both 2 and 3')\nelif num % 2 == 0:\n    print('Divisible by 2')\nelif num % 3 == 0:\n    print('Divisible by 3')\nelse:\n    print('Not divisible by 2 or 3')\n",
                    "temperature = 30\nif temperature > 30:\n    print('Hot')\nelif temperature >= 20:\n    print('Warm')\nelse:\n    print('Cold')\n"
                ),
                "Perulangan" to listOf(
                    "for i in range(5):\n    print(i)\n",
                    "sum = 0\nfor i in range(1, 6):\n    sum += i\nprint(sum)\n",
                    "for i in range(1, 10, 2):\n    print(i)\n",
                    "for i in range(5, 0, -1):\n    print(i)\n",
                    "i = 0\nwhile i < 5:\n    print(i)\n    i += 1\n",
                    "i = 5\nwhile i > 0:\n    print(i)\n    i -= 1\n",
                    "for i in range(5):\n    if i == 3:\n        break\n    print(i)\n",
                    "for i in range(5):\n    if i == 3:\n        continue\n    print(i)\n",
                    "for i in range(2):\n    for j in range(2):\n        print(i, j)\n",
                    "i = 0\nwhile i < 5:\n    if i == 3:\n        break\n    print(i)\n    i += 1\n",
                    "i = 0\nwhile i < 5:\n    if i == 3:\n        i += 1\n        continue\n    print(i)\n    i += 1\n",
                    "for i in range(3):\n    for j in range(3):\n        if i == j:\n            break\n        print(i, j)\n",
                    "for i in range(1, 4):\n    for j in range(i):\n        print('*', end='')\n    print()\n",
                    "n = 5\nfor i in range(1, n + 1):\n    for j in range(1, i + 1):\n        print(j, end='')\n    print()\n",
                    "for i in range(3):\n    print(i)\nelse:\n    print('Loop completed')\n"
                )
            ),
            "Intermediate" to mapOf(
                "Fungsi" to listOf(
                    "def greet(name):\n    return f'Hello, {name}!'\nprint(greet('Alice'))\n",
                    "def add(a, b):\n    return a + b\nprint(add(2, 3))\n",
                    "def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\nprint(factorial(5))\n",
                    "def is_even(n):\n    return n % 2 == 0\nprint(is_even(4))\n",
                    "def square_list(numbers):\n    return [x**2 for x in numbers]\nprint(square_list([1, 2, 3, 4]))\n",
                    "def max_of_two(a, b):\n    return a if a > b else b\nprint(max_of_two(5, 10))\n",
                    "def sum_list(numbers):\n    total = 0\n    for number in numbers:\n        total += number\n    return total\nprint(sum_list([1, 2, 3, 4, 5]))\n",
                    "def reverse_string(s):\n    return s[::-1]\nprint(reverse_string('hello'))\n",
                    "def fibonacci(n):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fibonacci(n-1) + fibonacci(n-2)\nprint(fibonacci(6))\n",
                    "def find_min(numbers):\n    min_num = numbers[0]\n    for num in numbers[1:]:\n        if num < min_num:\n            min_num = num\n    return min_num\nprint(find_min([3, 5, 2, 8, 1]))\n",
                    "def count_vowels(s):\n    return sum(1 for char in s if char in 'aeiouAEIOU')\nprint(count_vowels('hello'))\n",
                    "def multiply(a, b):\n    return a * b\nprint(multiply(3, 4))\n",
                    "def is_palindrome(s):\n    return s == s[::-1]\nprint(is_palindrome('radar'))\n",
                    "def greet(name, greeting='Hello'):\n    return f'{greeting}, {name}!'\nprint(greet('Bob', 'Hi'))\n",
                    "def power(base, exp):\n    return base ** exp\nprint(power(2, 3))\n"
                ),
                "Recursive Function" to listOf(
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " "
                ),
                "Lambda Function" to listOf(
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " "
                ),
                "Recursive Function" to listOf(
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " "
                )
            )
        ),
        "Kotlin" to mapOf(
            "basic" to mapOf(
                "Activity" to listOf(
                    "class MainActivity : AppCompatActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n    }\n}\n",
                    "class MainActivity : AppCompatActivity() {\n    override fun onStart() {\n        super.onStart()\n        // additional setup\n    }\n}\n",
                    "class MainActivity : AppCompatActivity() {\n    override fun onResume() {\n        super.onResume()\n        // resume operations\n    }\n}\n",
                    "class MainActivity : AppCompatActivity() {\n    override fun onPause() {\n        super.onPause()\n        // pause operations\n    }\n}\n",
                    "class MainActivity : AppCompatActivity() {\n    override fun onStop() {\n        super.onStop()\n        // stop operations\n    }\n}\n",
                    "class MainActivity : AppCompatActivity() {\n    override fun onDestroy() {\n        super.onDestroy()\n        // clean up operations\n    }\n}\n",
                    "class MainActivity : AppCompatActivity() {\n    override fun onRestart() {\n        super.onRestart()\n        // restart operations\n    }\n}\n",
                    "class MainActivity : AppCompatActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n        findViewById<Button>(R.id.button).setOnClickListener {\n            // button click operations\n        }\n    }\n}\n",
                    "class MainActivity : AppCompatActivity() {\n    override fun onSaveInstanceState(outState: Bundle) {\n        super.onSaveInstanceState(outState)\n        outState.putString(\"key\", \"value\")\n    }\n}\n",
                    "class MainActivity : AppCompatActivity() {\n    override fun onRestoreInstanceState(savedInstanceState: Bundle) {\n        super.onRestoreInstanceState(savedInstanceState)\n        val value = savedInstanceState.getString(\"key\")\n    }\n}\n",
                    "class MainActivity : AppCompatActivity() {\n    override fun onBackPressed() {\n        // handle back press\n        super.onBackPressed()\n    }\n}\n",
                    "class MainActivity : AppCompatActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        val fragment = ExampleFragment()\n        supportFragmentManager.beginTransaction().add(R.id.fragment_container, fragment).commit()\n    }\n}\n",
                    "class MainActivity : AppCompatActivity() {\n    override fun onCreateOptionsMenu(menu: Menu?): Boolean {\n        menuInflater.inflate(R.menu.menu_main, menu)\n        return true\n    }\n}\n",
                    "class MainActivity : AppCompatActivity() {\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\n        return when (item.itemId) {\n            R.id.action_settings -> {\n                // handle settings click\n                true\n            }\n            else -> super.onOptionsItemSelected(item)\n        }\n    }\n}\n",
                    "class MainActivity : AppCompatActivity() {\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n        super.onActivityResult(requestCode, resultCode, data)\n        if (requestCode == REQUEST_CODE && resultCode == Activity.RESULT_OK) {\n            // handle result\n        }\n    }\n}\n"
                ),
                "Intent" to listOf(
                    "val intent = Intent(this, SecondActivity::class.java)\nstartActivity(intent)\n",
                    "val intent = Intent(Intent.ACTION_VIEW)\nintent.data = Uri.parse(\"https://www.example.com\")\nstartActivity(intent)\n",
                    "val intent = Intent(Intent.ACTION_DIAL)\nintent.data = Uri.parse(\"tel:1234567890\")\nstartActivity(intent)\n",
                    "val intent = Intent(Intent.ACTION_SEND)\nintent.type = \"text/plain\"\nintent.putExtra(Intent.EXTRA_TEXT, \"Hello, World!\")\nstartActivity(intent)\n",
                    "val intent = Intent(Intent.ACTION_PICK)\nintent.type = \"image/*\"\nstartActivityForResult(intent, REQUEST_IMAGE_PICK)\n",
                    "val intent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)\nstartActivityForResult(intent, REQUEST_IMAGE_CAPTURE)\n",
                    "val intent = Intent(this, SecondActivity::class.java)\nintent.putExtra(\"KEY\", \"value\")\nstartActivity(intent)\n",
                    "val intent = Intent(this, SecondActivity::class.java)\nintent.flags = Intent.FLAG_ACTIVITY_NEW_TASK\nstartActivity(intent)\n",
                    "val intent = Intent(this, SecondActivity::class.java)\nintent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\nstartActivity(intent)\n",
                    "val intent = Intent(this, SecondActivity::class.java)\nintent.putExtra(\"KEY\", 123)\nstartActivityForResult(intent, REQUEST_CODE)\n",
                    "val intent = Intent(Intent.ACTION_SENDTO)\nintent.data = Uri.parse(\"mailto:example@example.com\")\nintent.putExtra(Intent.EXTRA_SUBJECT, \"Subject\")\nintent.putExtra(Intent.EXTRA_TEXT, \"Body\")\nstartActivity(intent)\n",
                    "val intent = Intent(Intent.ACTION_VIEW, Uri.parse(\"geo:37.7749,-122.4194\"))\nstartActivity(intent)\n",
                    "val intent = Intent(Settings.ACTION_SETTINGS)\nstartActivity(intent)\n",
                    "val intent = Intent(Intent.ACTION_SEND)\nintent.type = \"image/jpeg\"\nintent.putExtra(Intent.EXTRA_STREAM, imageUri)\nstartActivity(Intent.createChooser(intent, \"Share Image\"))\n",
                    "val intent = Intent(this, SecondActivity::class.java)\nintent.putParcelableArrayListExtra(\"KEY\", arrayList)\nstartActivity(intent)\n"
                ),
                "View dan ViewGroup" to listOf(
                    "val textView = TextView(this)\ntextView.text = \"Hello, World!\"\n",
                    "val button = Button(this)\nbutton.text = \"Click Me\"\nbutton.setOnClickListener {\n    Toast.makeText(this, \"Button clicked\", Toast.LENGTH_SHORT).show()\n}\n",
                    "val linearLayout = LinearLayout(this)\nlinearLayout.orientation = LinearLayout.VERTICAL\n",
                    "val relativeLayout = RelativeLayout(this)\nval textView = TextView(this)\ntextView.text = \"Hello, World!\"\nrelativeLayout.addView(textView)\n",
                    "val frameLayout = FrameLayout(this)\nval button = Button(this)\nbutton.text = \"Click Me\"\nframeLayout.addView(button)\n",
                    "val constraintLayout = ConstraintLayout(this)\nval textView = TextView(this)\ntextView.text = \"Hello, World!\"\nconstraintLayout.addView(textView)\n",
                    "val textView = TextView(this)\ntextView.layoutParams = LinearLayout.LayoutParams(\n    LinearLayout.LayoutParams.WRAP_CONTENT,\n    LinearLayout.LayoutParams.WRAP_CONTENT\n)\n",
                    "val imageView = ImageView(this)\nimageView.setImageResource(R.drawable.ic_launcher)\n",
                    "val editText = EditText(this)\neditText.hint = \"Enter your name\"\n",
                    "val scrollView = ScrollView(this)\nval textView = TextView(this)\ntextView.text = \"Long text...\"\nscrollView.addView(textView)\n",
                    "val gridLayout = GridLayout(this)\ngridLayout.rowCount = 2\ngridLayout.columnCount = 2\n",
                    "val recyclerView = RecyclerView(this)\nrecyclerView.layoutManager = LinearLayoutManager(this)\n",
                    "val listView = ListView(this)\nval items = arrayOf(\"Item 1\", \"Item 2\", \"Item 3\")\nval adapter = ArrayAdapter(this, android.R.layout.simple_list_item_1, items)\nlistView.adapter = adapter\n",
                    "val cardView = CardView(this)\nval textView = TextView(this)\ntextView.text = \"Card Content\"\ncardView.addView(textView)\n",
                    "val linearLayout = LinearLayout(this)\nlinearLayout.orientation = LinearLayout.HORIZONTAL\nval textView = TextView(this)\ntextView.text = \"Text\"\nlinearLayout.addView(textView)\nval button = Button(this)\nbutton.text = \"Button\"\nlinearLayout.addView(button)\n"
                ),
                "Style dan Theme" to listOf(
                    "val textView = TextView(this)\ntextView.text = \"Hello, World!\"\ntextView.setTextAppearance(R.style.MyTextStyle)\n",
                    "val button = Button(this)\nbutton.text = \"Click Me\"\nbutton.setBackgroundResource(R.drawable.my_button_background)\n",
                    "val textView = TextView(this, null, 0, R.style.MyTextStyle)\ntextView.text = \"Styled Text\"\n",
                    "val textView = TextView(ContextThemeWrapper(this, R.style.MyTextStyle))\ntextView.text = \"Styled with Theme\"\n",
                    "val button = Button(ContextThemeWrapper(this, R.style.MyButtonStyle))\nbutton.text = \"Styled Button\"\n",
                    "val linearLayout = LinearLayout(ContextThemeWrapper(this, R.style.MyLinearLayoutStyle))\nlinearLayout.orientation = LinearLayout.VERTICAL\n",
                    "val editText = EditText(this)\neditText.hint = \"Enter your name\"\neditText.setTextAppearance(R.style.MyEditTextStyle)\n",
                    "val textView = TextView(this)\ntextView.text = \"Hello, World!\"\ntextView.setTextColor(ContextCompat.getColor(this, R.color.myTextColor))\n",
                    "val button = Button(this)\nbutton.text = \"Submit\"\nbutton.setBackgroundColor(ContextCompat.getColor(this, R.color.myButtonColor))\n",
                    "val textView = TextView(this)\ntextView.text = \"Styled Text\"\ntextView.setTextSize(TypedValue.COMPLEX_UNIT_SP, 18f)\n",
                    "val imageView = ImageView(this)\nimageView.setImageResource(R.drawable.my_image)\nimageView.setColorFilter(ContextCompat.getColor(this, R.color.myImageColor))\n",
                    "val textView = TextView(this)\ntextView.text = \"Hello, World!\"\ntextView.setTypeface(ResourcesCompat.getFont(this, R.font.myFont))\n",
                    "val textView = TextView(this)\ntextView.text = \"Hello, World!\"\ntextView.typeface = Typeface.create(\"sans-serif-light\", Typeface.NORMAL)\n",
                    "val textView = TextView(this)\ntextView.text = \"Hello, World!\"\ntextView.setPadding(16, 16, 16, 16)\n",
                    "val linearLayout = LinearLayout(this)\nlinearLayout.orientation = LinearLayout.HORIZONTAL\nlinearLayout.setPadding(16, 16, 16, 16)\n"
                ),
                "Recycler View" to listOf(
                    "val recyclerView = findViewById<RecyclerView>(R.id.recyclerView)\nrecyclerView.layoutManager = LinearLayoutManager(this)\n",
                    "val recyclerView = findViewById<RecyclerView>(R.id.recyclerView)\nrecyclerView.layoutManager = GridLayoutManager(this, 2)\n",
                    "val recyclerView = findViewById<RecyclerView>(R.id.recyclerView)\nrecyclerView.layoutManager = StaggeredGridLayoutManager(2, StaggeredGridLayoutManager.VERTICAL)\n",
                    "val recyclerView = findViewById<RecyclerView>(R.id.recyclerView)\nrecyclerView.adapter = MyAdapter(dataList)\n",
                    "class MyAdapter(private val dataList: List<String>) : RecyclerView.Adapter<MyAdapter.ViewHolder>() {\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\n        val view = LayoutInflater.from(parent.context).inflate(R.layout.item_layout, parent, false)\n        return ViewHolder(view)\n    }\n\n    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\n        holder.textView.text = dataList[position]\n    }\n\n    override fun getItemCount() = dataList.size\n\n    class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {\n        val textView: TextView = view.findViewById(R.id.textView)\n    }\n}\n",
                    "recyclerView.setHasFixedSize(true)\n",
                    "val dividerItemDecoration = DividerItemDecoration(recyclerView.context, LinearLayoutManager.VERTICAL)\nrecyclerView.addItemDecoration(dividerItemDecoration)\n",
                    "recyclerView.itemAnimator = DefaultItemAnimator()\n",
                    "val swipeToDeleteCallback = object : ItemTouchHelper.SimpleCallback(0, ItemTouchHelper.LEFT or ItemTouchHelper.RIGHT) {\n    override fun onMove(\n        recyclerView: RecyclerView,\n        viewHolder: RecyclerView.ViewHolder,\n        target: RecyclerView.ViewHolder\n    ): Boolean {\n        return false\n    }\n\n    override fun onSwiped(viewHolder: RecyclerView.ViewHolder, direction: Int) {\n        val position = viewHolder.adapterPosition\n        dataList.removeAt(position)\n        recyclerView.adapter?.notifyItemRemoved(position)\n    }\n}\nItemTouchHelper(swipeToDeleteCallback).attachToRecyclerView(recyclerView)\n",
                    "val snapHelper = LinearSnapHelper()\nsnapHelper.attachToRecyclerView(recyclerView)\n",
                    "recyclerView.addOnScrollListener(object : RecyclerView.OnScrollListener() {\n    override fun onScrolled(recyclerView: RecyclerView, dx: Int, dy: Int) {\n        super.onScrolled(recyclerView, dx, dy)\n        // Do something\n    }\n})\n",
                    "val adapter = MyAdapter(dataList)\nrecyclerView.adapter = adapter\nadapter.notifyDataSetChanged()\n",
                    "recyclerView.layoutManager = LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, false)\n",
                    "val myAdapter = MyAdapter(dataList)\nrecyclerView.adapter = myAdapter\nrecyclerView.layoutManager = LinearLayoutManager(this)\n",
                    "class MyViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\n    val textView: TextView = itemView.findViewById(R.id.textView)\n}\n",
                    "class MyAdapter(private val dataList: List<String>) : RecyclerView.Adapter<MyAdapter.MyViewHolder>() {\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {\n        val view = LayoutInflater.from(parent.context).inflate(R.layout.item_layout, parent, false)\n        return MyViewHolder(view)\n    }\n\n    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {\n        holder.textView.text = dataList[position]\n    }\n\n    override fun getItemCount() = dataList.size\n\n    class MyViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\n        val textView: TextView = itemView.findViewById(R.id.textView)\n    }\n}\n"
                )
            )
        ),
        "Dart" to mapOf(
            "basic" to mapOf(
                "Fungsi Input dan Output" to listOf(
                    "import 'dart:io';\n\nvoid main() {\n  stdout.write('Masukkan nama Anda: ');\n  String? nama = stdin.readLineSync();\n  print('Halo, ' + nama!);\n}\n",
                    "import 'dart:io';\n\nvoid main() {\n  print('Masukkan angka pertama: ');\n  int angka1 = int.parse(stdin.readLineSync()!);\n  print('Masukkan angka kedua: ');\n  int angka2 = int.parse(stdin.readLineSync()!);\n  print('Hasil penjumlahan: ' + (angka1 + angka2).toString());\n}\n",
                    "import 'dart:io';\n\nvoid main() {\n  stdout.write('Masukkan usia Anda: ');\n  int usia = int.parse(stdin.readLineSync()!);\n  print('Usia Anda adalah ' + usia.toString() + ' tahun.');\n}\n",
                    "import 'dart:io';\n\nvoid main() {\n  stdout.write('Masukkan suhu dalam Celsius: ');\n  double suhuCelsius = double.parse(stdin.readLineSync()!);\n  double suhuFahrenheit = (suhuCelsius * 9/5) + 32;\n  print('Suhu dalam Fahrenheit: ' + suhuFahrenheit.toString());\n}\n",
                    "import 'dart:io';\n\nvoid main() {\n  print('Masukkan kalimat: ');\n  String? kalimat = stdin.readLineSync();\n  print('Panjang kalimat: ' + kalimat!.length.toString());\n}\n",
                    "import 'dart:io';\n\nvoid main() {\n  print('Masukkan angka: ');\n  int angka = int.parse(stdin.readLineSync()!);\n  print('Kuadrat dari ' + angka.toString() + ' adalah ' + (angka * angka).toString());\n}\n",
                    "import 'dart:io';\n\nvoid main() {\n  print('Masukkan kata: ');\n  String? kata = stdin.readLineSync();\n  String kataTerbalik = kata!.split('').reversed.join('');\n  print('Kata terbalik: ' + kataTerbalik);\n}\n",
                    "import 'dart:io';\n\nvoid main() {\n  stdout.write('Masukkan harga barang: ');\n  double harga = double.parse(stdin.readLineSync()!);\n  double hargaDiskon = harga * 0.9;\n  print('Harga setelah diskon 10%: ' + hargaDiskon.toString());\n}\n",
                    "import 'dart:io';\n\nvoid main() {\n  stdout.write('Masukkan nilai pertama: ');\n  double nilai1 = double.parse(stdin.readLineSync()!);\n  stdout.write('Masukkan nilai kedua: ');\n  double nilai2 = double.parse(stdin.readLineSync()!);\n  double rataRata = (nilai1 + nilai2) / 2;\n  print('Rata-rata nilai: ' + rataRata.toString());\n}\n",
                    "import 'dart:io';\n\nvoid main() {\n  print('Masukkan kalimat: ');\n  String? kalimat = stdin.readLineSync();\n  int jumlahKata = kalimat!.split(' ').length;\n  print('Jumlah kata: ' + jumlahKata.toString());\n}\n",
                    "import 'dart:io';\n\nvoid main() {\n  stdout.write('Masukkan angka desimal: ');\n  double angkaDesimal = double.parse(stdin.readLineSync()!);\n  int angkaBulat = angkaDesimal.toInt();\n  print('Angka bulat: ' + angkaBulat.toString());\n}\n",
                    "import 'dart:io';\n\nvoid main() {\n  print('Masukkan nama depan: ');\n  String? namaDepan = stdin.readLineSync();\n  print('Masukkan nama belakang: ');\n  String? namaBelakang = stdin.readLineSync();\n  print('Nama lengkap: ' + namaDepan! + ' ' + namaBelakang!);\n}\n",
                    "import 'dart:io';\n\nvoid main() {\n  print('Masukkan kata: ');\n  String? kata = stdin.readLineSync();\n  String kataKapital = kata!.toUpperCase();\n  print('Kata dalam huruf besar: ' + kataKapital);\n}\n",
                    "import 'dart:io';\n\nvoid main() {\n  print('Masukkan jumlah barang: ');\n  int jumlah = int.parse(stdin.readLineSync()!);\n  print('Masukkan harga per barang: ');\n  double hargaPerBarang = double.parse(stdin.readLineSync()!);\n  double totalHarga = jumlah * hargaPerBarang;\n  print('Total harga: ' + totalHarga.toString());\n}\n",
                    "import 'dart:io';\n\nvoid main() {\n  stdout.write('Masukkan angka: ');\n  int angka = int.parse(stdin.readLineSync()!);\n  bool isGenap = angka % 2 == 0;\n  print('Angka tersebut adalah ' + (isGenap ? 'genap' : 'ganjil'));\n}\n"
                ),
                "Operator" to listOf(
                    "void main() {\n  int a = 10;\n  int b = 3;\n  int hasil = a + b;\n  print(hasil);\n}\n",
                    "void main() {\n  int a = 15;\n  int b = 5;\n  int hasil = a - b;\n  print(hasil);\n}\n",
                    "void main() {\n  int a = 6;\n  int b = 7;\n  int hasil = a * b;\n  print(hasil);\n}\n",
                    "void main() {\n  double a = 20;\n  double b = 4;\n  double hasil = a / b;\n  print(hasil);\n}\n",
                    "void main() {\n  int a = 17;\n  int b = 4;\n  int hasil = a % b;\n  print(hasil);\n}\n",
                    "void main() {\n  int a = 5;\n  a++;\n  print(a);\n}\n",
                    "void main() {\n  int a = 8;\n  a--;\n  print(a);\n}\n",
                    "void main() {\n  int a = 5;\n  int b = 10;\n  bool hasil = a > b;\n  print(hasil);\n}\n",
                    "void main() {\n  int a = 5;\n  int b = 5;\n  bool hasil = a == b;\n  print(hasil);\n}\n",
                    "void main() {\n  int a = 8;\n  int b = 3;\n  bool hasil = a != b;\n  print(hasil);\n}\n",
                    "void main() {\n  int a = 10;\n  int b = 2;\n  bool hasil = a >= b;\n  print(hasil);\n}\n",
                    "void main() {\n  int a = 5;\n  int b = 5;\n  bool hasil = a <= b;\n  print(hasil);\n}\n",
                    "void main() {\n  bool a = true;\n  bool b = false;\n  bool hasil = a && b;\n  print(hasil);\n}\n",
                    "void main() {\n  bool a = true;\n  bool b = false;\n  bool hasil = a || b;\n  print(hasil);\n}\n",
                    "void main() {\n  int a = 5;\n  int hasil = a ~/ 2;\n  print(hasil);\n}\n"
                )
            )
        ),
        "Java" to mapOf(
            "basic" to mapOf(
                "Variabel dan Tipe Data" to listOf(
                    "int x = 5;\nSystem.out.println(x);\n",
                    "double y = 5.5;\nSystem.out.println(y);\n",
                    "char z = 'A';\nSystem.out.println(z);\n",
                    "boolean b = true;\nSystem.out.println(b);\n",
                    "String s = \"Hello\";\nSystem.out.println(s);\n",
                    "int a = 10;\nint b = 20;\nSystem.out.println(a + b);\n",
                    "double c = 10.5;\ndouble d = 20.5;\nSystem.out.println(c + d);\n",
                    "String str1 = \"Hello\";\nString str2 = \"World\";\nSystem.out.println(str1 + \" \" + str2);\n",
                    "int n = 5;\nSystem.out.println(n * n);\n",
                    "float f = 5.5f;\nSystem.out.println(f);\n",
                    "long l = 100000L;\nSystem.out.println(l);\n",
                    "byte bt = 100;\nSystem.out.println(bt);\n",
                    "short sh = 1000;\nSystem.out.println(sh);\n",
                    "int num = 10;\nSystem.out.println(num / 2);\n",
                    "int rem = 10 % 3;\nSystem.out.println(rem);\n"
                ),
                "Operator" to listOf(
                    "int x = 10 + 5;\nSystem.out.println(x);\n",
                    "int x = 20 - 5;\nSystem.out.println(x);\n",
                    "int x = 10 * 2;\nSystem.out.println(x);\n",
                    "int x = 20 / 4;\nSystem.out.println(x);\n",
                    "int x = 10 % 3;\nSystem.out.println(x);\n",
                    "int x = 5;\nx++;\nSystem.out.println(x);\n",
                    "int x = 5;\nx--;\nSystem.out.println(x);\n",
                    "int x = 5;\nint y = 10;\nSystem.out.println(x > y);\n",
                    "int x = 5;\nint y = 10;\nSystem.out.println(x < y);\n",
                    "int x = 10;\nint y = 10;\nSystem.out.println(x == y);\n",
                    "int x = 10;\nint y = 5;\nSystem.out.println(x >= y);\n",
                    "int x = 5;\nint y = 10;\nSystem.out.println(x <= y);\n",
                    "boolean x = true;\nboolean y = false;\nSystem.out.println(x && y);\n",
                    "boolean x = true;\nboolean y = false;\nSystem.out.println(x || y);\n",
                    "int x = 5;\nint y = 10;\nSystem.out.println(x != y);\n"
                ),
                "Percabangan" to listOf(
                    "int x = 10;\nif(x > 5) {\n    System.out.println(\"x lebih besar dari 5\");\n}\n",
                    "int x = 3;\nif(x < 5) {\n    System.out.println(\"x lebih kecil dari 5\");\n}\n",
                    "int x = 5;\nif(x == 5) {\n    System.out.println(\"x sama dengan 5\");\n}\n",
                    "int x = 7;\nif(x != 5) {\n    System.out.println(\"x tidak sama dengan 5\");\n}\n",
                    "int x = 2;\nif(x >= 2) {\n    System.out.println(\"x lebih besar atau sama dengan 2\");\n}\n",
                    "int x = 1;\nif(x <= 5) {\n    System.out.println(\"x lebih kecil atau sama dengan 5\");\n}\n",
                    "int x = 10;\nif(x > 5) {\n    System.out.println(\"x lebih besar dari 5\");\n} else {\n    System.out.println(\"x tidak lebih besar dari 5\");\n}\n",
                    "int x = 3;\nif(x < 5) {\n    System.out.println(\"x lebih kecil dari 5\");\n} else {\n    System.out.println(\"x tidak lebih kecil dari 5\");\n}\n",
                    "int x = 5;\nif(x == 5) {\n    System.out.println(\"x sama dengan 5\");\n} else {\n    System.out.println(\"x tidak sama dengan 5\");\n}\n",
                    "int x = 7;\nif(x != 5) {\n    System.out.println(\"x tidak sama dengan 5\");\n} else {\n    System.out.println(\"x sama dengan 5\");\n}\n",
                    "int x = 2;\nif(x >= 2) {\n    System.out.println(\"x lebih besar atau sama dengan 2\");\n} else {\n    System.out.println(\"x lebih kecil dari 2\");\n}\n",
                    "int x = 1;\nif(x <= 5) {\n    System.out.println(\"x lebih kecil atau sama dengan 5\");\n} else {\n    System.out.println(\"x lebih besar dari 5\");\n}\n",
                    "int x = 10;\nif(x > 5) {\n    System.out.println(\"x lebih besar dari 5\");\n} else if(x == 5) {\n    System.out.println(\"x sama dengan 5\");\n} else {\n    System.out.println(\"x tidak lebih besar dari 5\");\n}\n",
                    "int x = 3;\nif(x < 5) {\n    System.out.println(\"x lebih kecil dari 5\");\n} else if(x == 5) {\n    System.out.println(\"x sama dengan 5\");\n} else {\n    System.out.println(\"x tidak lebih kecil dari 5\");\n}\n",
                    "int x = 5;\nif(x == 5) {\n    System.out.println(\"x sama dengan 5\");\n} else if(x > 5) {\n    System.out.println(\"x lebih besar dari 5\");\n} else {\n    System.out.println(\"x lebih kecil dari 5\");\n}\n"
                ),
                "Perulangan" to listOf(
                    "for(int i = 0; i < 5; i++) {\n    System.out.println(i);\n}\n",
                    "int i = 0;\nwhile(i < 5) {\n    System.out.println(i);\n    i++;\n}\n",
                    "int i = 0;\ndo {\n    System.out.println(i);\n    i++;\n} while(i < 5);\n",
                    "for(int i = 0; i < 10; i += 2) {\n    System.out.println(i);\n}\n",
                    "for(int i = 5; i > 0; i--) {\n    System.out.println(i);\n}\n",
                    "int i = 10;\nwhile(i > 5) {\n    System.out.println(i);\n    i--;\n}\n",
                    "int i = 10;\ndo {\n    System.out.println(i);\n    i--;\n} while(i > 5);\n",
                    "for(int i = 1; i <= 5; i++) {\n    System.out.println(i * i);\n}\n",
                    "for(int i = 1; i <= 5; i++) {\n    if(i % 2 == 0) continue;\n    System.out.println(i);\n}\n",
                    "for(int i = 1; i <= 5; i++) {\n    if(i % 2 != 0) break;\n    System.out.println(i);\n}\n",
                    "for(int i = 1; i <= 3; i++) {\n    for(int j = 1; j <= 3; j++) {\n        System.out.println(i * j);\n    }\n}\n",
                    "int i = 0;\nwhile(true) {\n    System.out.println(i);\n    if(i == 5) break;\n    i++;\n}\n",
                    "for(int i = 0; i < 3; i++) {\n    for(int j = 0; j < 2; j++) {\n        System.out.println(i + j);\n    }\n}\n",
                    "for(int i = 0; i < 5; i++) {\n    if(i == 3) continue;\n    System.out.println(i);\n}\n",
                    "for(int i = 0; i < 5; i++) {\n    if(i == 3) break;\n    System.out.println(i);\n}\n"
                ),
                "Struktur Data Array" to listOf(
                    "int[] arr = {1, 2, 3, 4, 5};\nSystem.out.println(arr[0]);\n",
                    "int[] arr = {1, 2, 3, 4, 5};\nSystem.out.println(arr[2]);\n",
                    "int[] arr = {1, 2, 3, 4, 5};\nSystem.out.println(arr.length);\n",
                    "int[] arr = {1, 2, 3, 4, 5};\nSystem.out.println(arr[arr.length - 1]);\n",
                    "int[] arr = {1, 2, 3, 4, 5};\narr[2] = 10;\nSystem.out.println(arr[2]);\n",
                    "int[] arr = {1, 2, 3, 4, 5};\nint sum = 0;\nfor(int num : arr) {\n    sum += num;\n}\nSystem.out.println(sum);\n",
                    "int[] arr = new int[5];\nSystem.out.println(arr[3]);\n",
                    "int[] arr = {1, 2, 3, 4, 5};\nSystem.out.println(arr[1] + arr[3]);\n",
                    "int[] arr = {1, 2, 3, 4, 5};\nSystem.out.println(arr[1] * arr[4]);\n",
                    "int[] arr = {1, 2, 3, 4, 5};\narr[0] = arr[1];\nSystem.out.println(arr[0]);\n",
                    "int[] arr = {1, 2, 3, 4, 5};\nint max = arr[0];\nfor(int i = 1; i < arr.length; i++) {\n    if(arr[i] > max) {\n        max = arr[i];\n    }\n}\nSystem.out.println(max);\n",
                    "int[] arr = {1, 2, 3, 4, 5};\nSystem.out.println(arr[2] - arr[1]);\n",
                    "int[] arr = {1, 2, 3, 4, 5};\nSystem.out.println(arr.length > 4 ? arr[4] : arr[0]);\n",
                    "int[] arr = {1, 2, 3, 4, 5};\nSystem.out.println(arr.length == 5 ? arr[2] : arr[1]);\n",
                    "int[] arr = {1, 2, 3, 4, 5};\nint min = arr[0];\nfor(int i = 1; i < arr.length; i++) {\n    if(arr[i] < min) {\n        min = arr[i];\n    }\n}\nSystem.out.println(min);\n"
                )
            )
        ),
        "HTML" to mapOf(
            "basic" to mapOf(
                "Elemen dan Tag" to listOf(
                    "<h1>Heading 1</h1>\n",
                    "<p>Ini adalah paragraf.</p>\n",
                    "<a href=\"https://www.example.com\">Klik di sini</a>\n",
                    "<img src=\"image.jpg\" alt=\"Deskripsi gambar\">\n",
                    "<ul>\n  <li>Item 1</li>\n  <li>Item 2</li>\n</ul>\n",
                    "<ol>\n  <li>Item 1</li>\n  <li>Item 2</li>\n</ol>\n",
                    "<div>\n  <p>Ini adalah paragraf dalam div.</p>\n</div>\n",
                    "<span>Ini adalah teks dalam span.</span>\n",
                    "<table>\n  <tr>\n    <th>Header 1</th>\n    <th>Header 2</th>\n  </tr>\n  <tr>\n    <td>Data 1</td>\n    <td>Data 2</td>\n  </tr>\n</table>\n",
                    "<form>\n  <input type=\"text\" name=\"nama\" placeholder=\"Nama\">\n</form>\n",
                    "<button type=\"button\">Klik saya</button>\n",
                    "<textarea rows=\"4\" cols=\"50\">Ini adalah teks area.</textarea>\n",
                    "<header>\n  <h1>Judul</h1>\n</header>\n",
                    "<footer>\n  <p>Hak cipta 2024</p>\n</footer>\n",
                    "<nav>\n  <a href=\"#\">Home</a>\n  <a href=\"#\">Tentang</a>\n  <a href=\"#\">Kontak</a>\n</nav>\n"
                ),
                "Atribut" to listOf(
                    "<img src='image.jpg' alt='Gambar'>\n",
                    "<a href='https://www.example.com'>Example</a>\n",
                    "<input type='text' value='Hello'>\n",
                    "<button disabled>Click Me</button>\n",
                    "<div style='color: red;'>This is a red text</div>\n",
                    "<input type='checkbox' checked>\n",
                    "<input type='number' min='1' max='10'>\n",
                    "<p title='This is a tooltip'>Hover over me</p>\n",
                    "<img src='image.jpg' width='500' height='600'>\n",
                    "<input type='password' placeholder='Enter password'>\n",
                    "<a href='https://www.example.com' target='_blank'>Example</a>\n",
                    "<link rel='stylesheet' href='styles.css'>\n",
                    "<meta charset='UTF-8'>\n",
                    "<audio controls>\n  <source src='audio.mp3' type='audio/mpeg'>\n</audio>\n",
                    "<video controls>\n  <source src='video.mp4' type='video/mp4'>\n</video>\n"
                ),
                "Link dan Gambar" to listOf(
                    "<a href=\"https://www.example.com\">Klik di sini</a>",
                    "<img src=\"image.jpg\" alt=\"Gambar Contoh\">",
                    "<a href=\"https://www.example.com\" target=\"_blank\">Buka di Tab Baru</a>",
                    "<a href=\"#section1\">Pergi ke Bagian 1</a>",
                    "<img src=\"image.jpg\" width=\"500\" height=\"300\">",
                    "<a href=\"mailto:example@example.com\">Kirim Email</a>",
                    "<img src=\"image.jpg\" title=\"Gambar Contoh\">",
                    "<a href=\"https://www.example.com\"><img src=\"image.jpg\" alt=\"Gambar sebagai Link\"></a>",
                    "<a href=\"tel:+1234567890\">Panggil Nomor Ini</a>",
                    "<img src=\"image.jpg\" alt=\"Gambar\" style=\"border:2px solid black\">",
                    "<a href=\"https://www.example.com\" download=\"file.zip\">Download File</a>",
                    "<img src=\"image.jpg\" alt=\"Gambar\" class=\"responsive\">",
                    "<a href=\"https://www.example.com\" title=\"Menuju Example\">Example</a>",
                    "<img src=\"image.jpg\" alt=\"Gambar\" usemap=\"#map\">",
                    "<map name=\"map\"><area shape=\"rect\" coords=\"34,44,270,350\" href=\"https://www.example.com\"></map>"
                )
            )
        ),
        "CSS" to mapOf(
            "basic" to mapOf(
                "Selektor CSS" to listOf(
                    "p {\n  color: red;\n}\n",
                    "div {\n  font-size: 16px;\n}\n",
                    "#header {\n  background-color: blue;\n}\n",
                    ".highlight {\n  font-weight: bold;\n}\n",
                    "a:hover {\n  text-decoration: underline;\n}\n",
                    "input[type=\"text\"] {\n  border: 1px solid black;\n}\n",
                    "ul li {\n  list-style-type: none;\n}\n",
                    "h1, h2, h3 {\n  margin: 0;\n}\n",
                    "img[src*=\"logo\"] {\n  width: 100px;\n}\n",
                    "button:disabled {\n  opacity: 0.5;\n}\n",
                    "p:first-child {\n  margin-top: 0;\n}\n",
                    "div > p {\n  padding: 10px;\n}\n",
                    "a[target=\"_blank\"] {\n  color: green;\n}\n",
                    "section + section {\n  border-top: 1px solid grey;\n}\n",
                    ".container .item {\n  display: inline-block;\n}\n"
                ),
                "Margin dan Padding" to listOf(
                    "div {\n    margin: 10px;\n}\n",
                    "div {\n    padding: 20px;\n}\n",
                    "div {\n    margin-top: 15px;\n    margin-bottom: 15px;\n}\n",
                    "div {\n    padding-left: 10px;\n    padding-right: 10px;\n}\n",
                    "div {\n    margin: 0 auto;\n}\n",
                    "div {\n    padding: 5% 10%;\n}\n",
                    "div {\n    margin: 1em 2em 3em 4em;\n}\n",
                    "div {\n    padding: 0 30px 20px 10px;\n}\n",
                    "div {\n    margin-left: auto;\n    margin-right: auto;\n}\n",
                    "div {\n    padding-top: 15px;\n    padding-bottom: 15px;\n}\n",
                    "div {\n    margin: 0 0 20px 0;\n}\n",
                    "div {\n    padding: 10px 5px;\n}\n",
                    "div {\n    margin: 10px 0 0 0;\n}\n",
                    "div {\n    padding: 15px 5px 5px 15px;\n}\n",
                    "div {\n    margin: 2rem 1rem;\n}\n"
                ),
                "Position CSS" to listOf(
                    "div {\n    position: absolute;\n    top: 50px;\n    left: 100px;\n}\n",
                    "div {\n    position: relative;\n    top: 20px;\n    left: 30px;\n}\n",
                    "div {\n    position: fixed;\n    bottom: 10px;\n    right: 20px;\n}\n",
                    "div {\n    position: sticky;\n    top: 0;\n}\n",
                    "div {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n}\n",
                    "div {\n    position: relative;\n    bottom: 10px;\n    right: 20px;\n}\n",
                    "div {\n    position: fixed;\n    top: 50px;\n    left: 50px;\n}\n",
                    "div {\n    position: sticky;\n    bottom: 0;\n}\n",
                    "div {\n    position: absolute;\n    top: 0;\n    right: 0;\n}\n",
                    "div {\n    position: relative;\n    top: 10px;\n    left: 10px;\n}\n",
                    "div {\n    position: fixed;\n    bottom: 50px;\n    left: 50px;\n}\n",
                    "div {\n    position: sticky;\n    top: 50px;\n}\n",
                    "div {\n    position: absolute;\n    bottom: 50px;\n    left: 100px;\n}\n",
                    "div {\n    position: relative;\n    top: 30px;\n    right: 30px;\n}\n",
                    "div {\n    position: fixed;\n    top: 0;\n    right: 0;\n}\n"
                ),
                "Border CSS" to listOf(
                    "div {\n  border: 2px solid black;\n}\n",
                    "div {\n  border-width: 5px;\n  border-style: dashed;\n  border-color: blue;\n}\n",
                    "div {\n  border-top: 3px dotted red;\n}\n",
                    "div {\n  border-right: 4px double green;\n}\n",
                    "div {\n  border-bottom: 1px solid orange;\n}\n",
                    "div {\n  border-left: 6px groove purple;\n}\n",
                    "div {\n  border: 2px outset blue;\n}\n",
                    "div {\n  border: 3px inset gray;\n}\n",
                    "div {\n  border: medium none;\n}\n",
                    "div {\n  border-style: solid;\n  border-color: red;\n}\n",
                    "div {\n  border-width: thick;\n}\n",
                    "div {\n  border: thin dashed yellow;\n}\n",
                    "div {\n  border: 2px solid;\n  border-color: green yellow;\n}\n",
                    "div {\n  border: 5px ridge #0000FF;\n}\n",
                    "div {\n  border: 4px solid rgb(0, 255, 0);\n}\n"
                ),
                "Properti Font dan Warna" to listOf(
                    "p {\n    color: red;\n}\n",
                    "h1 {\n    font-size: 24px;\n}\n",
                    "div {\n    background-color: blue;\n}\n",
                    "span {\n    color: #00ff00;\n}\n",
                    "p {\n    font-family: Arial, sans-serif;\n}\n",
                    "h2 {\n    color: rgb(255, 0, 0);\n}\n",
                    "body {\n    background-color: #f0f0f0;\n}\n",
                    "p {\n    color: rgba(0, 0, 255, 0.5);\n}\n",
                    "h1 {\n    font-size: 2em;\n}\n",
                    "div {\n    color: hsl(120, 100%, 50%);\n}\n",
                    "p {\n    font-weight: bold;\n}\n",
                    "span {\n    color: #ff00ff;\n}\n",
                    "h2 {\n    font-family: 'Times New Roman', serif;\n}\n",
                    "body {\n    color: #333333;\n}\n",
                    "p {\n    font-style: italic;\n}\n"
                )
            )
        ),
        "JavaScript" to mapOf(
            "basic" to mapOf(
                "Dasar-dasar JavaScript" to listOf(
                    "let x = 5;\nconsole.log(x);\n",
                    "let y = 'Hello, World!';\nconsole.log(y);\n",
                    "let z = 10 + 5;\nconsole.log(z);\n",
                    "let a = 10;\na += 5;\nconsole.log(a);\n",
                    "let b = 'Hello' + ' ' + 'World';\nconsole.log(b);\n",
                    "let c = 10;\nlet d = 5;\nlet result = c > d;\nconsole.log(result);\n",
                    "let e = 5;\ne++;\nconsole.log(e);\n",
                    "let f = 10;\nf--;\nconsole.log(f);\n",
                    "let g = 7;\nlet h = 7;\nconsole.log(g === h);\n",
                    "let i = 10;\nlet j = '10';\nconsole.log(i == j);\n",
                    "let k = 20;\nlet l = 15;\nconsole.log(k != l);\n",
                    "let m = true;\nconsole.log(!m);\n",
                    "let n = 10;\nlet o = 20;\nconsole.log(n > 5 && o > 15);\n",
                    "let p = 10;\nlet q = 5;\nconsole.log(p < 15 || q > 10);\n",
                    "let r = 'JavaScript';\nconsole.log(r.length);\n"
                ),
                "Tipe Operator" to listOf(
                    "console.log(5 + 3);\n",
                    "console.log(10 - 6);\n",
                    "console.log(7 * 2);\n",
                    "console.log(8 / 4);\n",
                    "console.log(9 % 2);\n",
                    "console.log(2 ** 3);\n",
                    "console.log(5 > 3);\n",
                    "console.log(4 < 2);\n",
                    "console.log(7 >= 7);\n",
                    "console.log(5 <= 8);\n",
                    "console.log(3 == '3');\n",
                    "console.log(3 === '3');\n",
                    "console.log(5 != '5');\n",
                    "console.log(5 !== '5');\n",
                    "console.log(!(4 > 2));\n"
                ),
                "Deklarasi Variabel" to listOf(
                    "let x = 10;\nconsole.log(x);\n",
                    "const y = 20;\nconsole.log(y);\n",
                    "var z = 30;\nconsole.log(z);\n",
                    "let a = 5;\na = 15;\nconsole.log(a);\n",
                    "const b = 8;\n// b = 18;\nconsole.log(b);\n",
                    "var c = 12;\nc = 22;\nconsole.log(c);\n",
                    "let d;\nd = 25;\nconsole.log(d);\n",
                    "const e = 'Hello';\nconsole.log(e);\n",
                    "var f = true;\nconsole.log(f);\n",
                    "let g = null;\nconsole.log(g);\n",
                    "const h = 3.14;\nconsole.log(h);\n",
                    "var i;\ni = 'JavaScript';\nconsole.log(i);\n",
                    "let j = 0;\nconsole.log(j);\n",
                    "const k = false;\nconsole.log(k);\n",
                    "var l = undefined;\nconsole.log(l);\n"
                ),
                "JSON" to listOf(
                    "let jsonString = '{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}';\nlet obj = JSON.parse(jsonString);\nconsole.log(obj.name);\n",
                    "let jsonString = '{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}';\nlet obj = JSON.parse(jsonString);\nconsole.log(obj.age);\n",
                    "let jsonString = '{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}';\nlet obj = JSON.parse(jsonString);\nconsole.log(obj.city);\n",
                    "let obj = {\"name\":\"John\", \"age\":30, \"city\":\"New York\"};\nlet jsonString = JSON.stringify(obj);\nconsole.log(jsonString);\n",
                    "let obj = {\"name\":\"John\", \"age\":30, \"city\":\"New York\"};\nlet jsonString = JSON.stringify(obj);\nconsole.log(typeof jsonString);\n",
                    "let obj = {\"name\":\"John\", \"age\":30, \"city\":\"New York\"};\nlet jsonString = JSON.stringify(obj);\nlet newObj = JSON.parse(jsonString);\nconsole.log(newObj);\n",
                    "let jsonString = '{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}';\nlet obj = JSON.parse(jsonString);\nconsole.log(obj['name']);\n",
                    "let jsonString = '{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}';\nlet obj = JSON.parse(jsonString);\nconsole.log(obj['age']);\n",
                    "let jsonString = '{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}';\nlet obj = JSON.parse(jsonString);\nconsole.log(obj['city']);\n",
                    "let jsonString = '[{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}, {\"name\":\"Anna\", \"age\":22, \"city\":\"London\"}]';\nlet arr = JSON.parse(jsonString);\nconsole.log(arr[1].name);\n",
                    "let jsonString = '[{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}, {\"name\":\"Anna\", \"age\":22, \"city\":\"London\"}]';\nlet arr = JSON.parse(jsonString);\nconsole.log(arr[0].city);\n",
                    "let jsonString = '[{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}, {\"name\":\"Anna\", \"age\":22, \"city\":\"London\"}]';\nlet arr = JSON.parse(jsonString);\nconsole.log(arr.length);\n",
                    "let jsonString = '[{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}, {\"name\":\"Anna\", \"age\":22, \"city\":\"London\"}]';\nlet arr = JSON.parse(jsonString);\nconsole.log(arr[1].age);\n",
                    "let jsonString = '{\"person\":{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}}';\nlet obj = JSON.parse(jsonString);\nconsole.log(obj.person.name);\n",
                    "let jsonString = '{\"person\":{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}}';\nlet obj = JSON.parse(jsonString);\nconsole.log(obj.person.city);\n"
                )
            )
        )
    )

    private val questionsMap = mapOf(
        "Python" to mapOf(
            "basic" to mapOf(
                "Tipe Data dan Variabel" to listOf(
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?"
                ),
                "Tipe Data List" to listOf(
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?",
                    "Apa hasil dari script di atas?"
                ),
                "Tipe Data Tupple" to listOf(
                    "Berapakah nilai yang akan dicetak oleh print(tup[0])?",
                    "Berapakah nilai yang akan dicetak oleh print(tup[-1])?",
                    "Berapakah panjang tuple tup?",
                    "Berapakah hasil dari tup[1:3]?",
                    "Berapakah hasil dari tup + (5,)?",
                    "Berapakah hasil dari tup1 + tup2?",
                    "Apakah 2 ada di dalam tuple tup?",
                    "Apakah 5 ada di dalam tuple tup?",
                    "Berapakah nilai dari b setelah unpacking tuple tup?",
                    "Berapakah indeks dari nilai 3 di dalam tuple tup?",
                    "Berapakah jumlah kemunculan nilai 2 di dalam tuple tup?",
                    "Berapakah hasil dari tup setelah operasi tup = tup + (5, 6)?",
                    "Berapakah hasil dari operasi tup * 2?",
                    "Apa yang akan dicetak oleh program ini?",
                    "Berapakah nilai minimum dari tuple tup?"
                ),
                "Input dan Output" to listOf(
                    "Apa yang akan dicetak oleh print('Hello, ' + name) jika name adalah 'Alice'?",
                    "Apa yang akan dicetak oleh print('You are ' + age + ' years old') jika age adalah '30'?",
                    "Apa hasil dari print('Sum: ', num1 + num2) jika num1 adalah 3 dan num2 adalah 4?",
                    "Apa hasil dari print('Product: ', num1 * num2) jika num1 adalah 2.5 dan num2 adalah 4.0?",
                    "Apa yang akan dicetak oleh print('Python', 'is', 'fun', sep='-')?",
                    "Apa yang akan dicetak oleh kode berikut?\nprint('First line', end=' ')\nprint('Second line')",
                    "Apa yang akan dicetak oleh print(f'My name is {name} and I am {age} years old') jika name adalah 'Alice' dan age adalah 25?",
                    "Apa yang akan dicetak oleh print('Hello {0}, you are {1} years old'.format('Bob', 30))?",
                    "Apa yang akan dicetak oleh print('Hello {name}, you are {age} years old'.format(**data)) jika data adalah {'name': 'Charlie', 'age': 35}?",
                    "Apa yang akan dicetak oleh print('The value of pi is approximately {:.2f}'.format(3.14159))?",
                    "Apa yang akan dicetak oleh print('Hello, {}. You are {}.'.format(name, age)) jika name adalah 'David' dan age adalah '40'?",
                    "Apa yang akan dicetak oleh print(f'The number you entered is {a}') jika a adalah 10?",
                    "Apa yang akan dicetak oleh print('Learning', 'Python', 'is', 'easy!', sep='*')?",
                    "Apa yang akan dicetak oleh print('Good', end='...')\nprint('Morning')?",
                    "Apa yang akan dicetak oleh print(f'Nice to meet you, {name}!') jika name adalah 'Eve'?"
                ),
                "Percabangan" to listOf(
                    "Apa yang akan dicetak oleh print('Positive') jika x adalah 5?",
                    "Apa yang akan dicetak oleh print('Negative') jika x adalah -3?",
                    "Apa hasil dari print('x is greater than y') jika x adalah 10 dan y adalah 5?",
                    "Apa hasil dari print('x is not greater than y') jika x adalah 10 dan y adalah 20?",
                    "Apa yang akan dicetak oleh print('x is equal to y') jika x adalah 10 dan y adalah 10?",
                    "Apa yang akan dicetak oleh print('x is greater than or equal to y') jika x adalah 15 dan y adalah 10?",
                    "Apa yang akan dicetak oleh print('Odd') jika x adalah 5?",
                    "Apa yang akan dicetak oleh print('Zero') jika x adalah 0?",
                    "Apa yang akan dicetak oleh print('x is less than y') jika x adalah 20 dan y adalah 30?",
                    "Apa yang akan dicetak oleh print('Adult') jika age adalah 18?",
                    "Apa yang akan dicetak oleh kode berikut?\nmarks = 85\nif marks >= 90:\n    grade = 'A'\nelif marks >= 80:\n    grade = 'B'\nelse:\n    grade = 'C'\nprint(grade)",
                    "Apa yang akan dicetak oleh print('x is less than y') jika x adalah 7 dan y adalah 10?",
                    "Apa yang akan dicetak oleh print('Weekday') jika day adalah 'Monday'?",
                    "Apa yang akan dicetak oleh print('Divisible by 2') jika num adalah 4?",
                    "Apa yang akan dicetak oleh print('Warm') jika temperature adalah 30?"
                ),
                "Perulangan" to listOf(
                    "Apa yang akan dicetak oleh script tersebut?",
                    "Apa hasil dari penjumlahan range(1, 6)?",
                    "Apa hasil dari perulangan dengan langkah 2 pada range(1, 10)?",
                    "Apa hasil dari perulangan mundur dari 5 ke 1?",
                    "Apa yang akan dicetak oleh perulangan while sampai i kurang dari 5?",
                    "Apa yang akan dicetak oleh perulangan while dari 5 ke 1?",
                    "Apa yang akan dicetak sebelum break dalam perulangan for range(5) jika i == 3?",
                    "Apa yang akan dicetak dalam perulangan for range(5) jika i == 3 menggunakan continue?",
                    "Apa yang akan dicetak oleh perulangan bersarang for range(2)?",
                    "Apa yang akan dicetak oleh perulangan while sampai i == 3 menggunakan break?",
                    "Apa yang akan dicetak oleh perulangan while sampai i == 3 menggunakan continue?",
                    "Apa yang akan dicetak oleh perulangan bersarang for range(3) dengan break jika i == j?",
                    "Apa yang akan dicetak oleh perulangan bersarang for untuk mencetak pola bintang?",
                    "Apa yang akan dicetak oleh perulangan bersarang for untuk mencetak pola angka?",
                    "Apa yang akan dicetak oleh perulangan for dengan else setelah selesai?"
                )
            ),
            "Intermediate" to mapOf(
                "Fungsi" to listOf(
                    "Apa output dari fungsi greet ketika dipanggil dengan argumen 'Alice'?",
                    "Apa output dari fungsi add ketika dipanggil dengan argumen 2 dan 3?",
                    "Apa output dari fungsi factorial ketika dipanggil dengan argumen 5?",
                    "Apa output dari fungsi is_even ketika dipanggil dengan argumen 4?",
                    "Apa output dari fungsi square_list ketika dipanggil dengan argumen [1, 2, 3, 4]?",
                    "Apa output dari fungsi max_of_two ketika dipanggil dengan argumen 5 dan 10?",
                    "Apa output dari fungsi sum_list ketika dipanggil dengan argumen [1, 2, 3, 4, 5]?",
                    "Apa output dari fungsi reverse_string ketika dipanggil dengan argumen 'hello'?",
                    "Apa output dari fungsi fibonacci ketika dipanggil dengan argumen 6?",
                    "Apa output dari fungsi find_min ketika dipanggil dengan argumen [3, 5, 2, 8, 1]?",
                    "Apa output dari fungsi count_vowels ketika dipanggil dengan argumen 'hello'?",
                    "Apa output dari fungsi multiply ketika dipanggil dengan argumen 3 dan 4?",
                    "Apa output dari fungsi is_palindrome ketika dipanggil dengan argumen 'radar'?",
                    "Apa output dari fungsi greet ketika dipanggil dengan argumen 'Bob' dan 'Hi'?",
                    "Apa output dari fungsi power ketika dipanggil dengan argumen 2 dan 3?"
                ),
                "Recursive Function" to listOf(
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " "
                ),
                "Lambda Function" to listOf(
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " "
                ),
                "Recursive Function" to listOf(
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " "
                ),
            )
        ),
        "Kotlin" to mapOf(
            "basic" to mapOf(
                "Activity" to listOf(
                    "Apa yang dilakukan method onCreate dalam script tersebut?",
                    "Kapan method onStart dipanggil dalam lifecycle activity?",
                    "Kapan method onResume dipanggil dalam lifecycle activity?",
                    "Apa yang dilakukan method onPause dalam script tersebut?",
                    "Kapan method onStop dipanggil dalam lifecycle activity?",
                    "Apa yang dilakukan method onDestroy dalam script tersebut?",
                    "Kapan method onRestart dipanggil dalam lifecycle activity?",
                    "Apa yang dilakukan ketika tombol ditekan dalam script tersebut?",
                    "Apa tujuan dari method onSaveInstanceState dalam script tersebut?",
                    "Apa yang dilakukan method onRestoreInstanceState dalam script tersebut?",
                    "Apa yang dilakukan method onBackPressed dalam script tersebut?",
                    "Apa yang dilakukan dalam onCreate untuk menambahkan fragment dalam script tersebut?",
                    "Apa yang dilakukan method onCreateOptionsMenu dalam script tersebut?",
                    "Apa yang dilakukan method onOptionsItemSelected dalam script tersebut?",
                    "Apa yang dilakukan method onActivityResult dalam script tersebut?"
                ),
                "Intent" to listOf(
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?"
                ),
                "View dan ViewGroup" to listOf(
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?"
                ),
                "Style dan Theme" to listOf(
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?"
                ),
                "Recycler View" to listOf(
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?",
                    "Apa yang dilakukan kode ini?"
                )
            )
        ),
        "Dart" to mapOf(
            "basic" to mapOf(
                "Fungsi Input dan Output" to listOf(
                    "Apa fungsi dari stdout.write dalam kode di atas?",
                    "Apa fungsi dari int.parse dalam kode di atas?",
                    "Apa fungsi dari stdin.readLineSync dalam kode di atas?",
                    "Bagaimana cara mengonversi suhu Celsius ke Fahrenheit dalam kode di atas?",
                    "Apa output dari kode di atas jika pengguna memasukkan \"Hello World\"?",
                    "Apa fungsi dari angka * angka dalam kode di atas?",
                    "Apa fungsi dari split('').reversed.join('') dalam kode di atas?",
                    "Bagaimana cara menghitung harga setelah diskon dalam kode di atas?",
                    "Apa fungsi dari (nilai1 + nilai2) / 2 dalam kode di atas?",
                    "Bagaimana cara menghitung jumlah kata dalam kode di atas?",
                    "Apa fungsi dari toInt() dalam kode di atas?",
                    "Apa yang ditampilkan oleh kode di atas jika pengguna memasukkan \"John\" sebagai nama depan dan \"Doe\" sebagai nama belakang?",
                    "Apa fungsi dari toUpperCase() dalam kode di atas?",
                    "Apa fungsi dari jumlah * hargaPerBarang dalam kode di atas?",
                    "Apa yang ditampilkan oleh kode di atas jika pengguna memasukkan angka 7?"
                ),
                "Operator" to listOf(
                    "Berapakah hasil dari operasi a + b?",
                    "Berapakah hasil dari operasi a - b?",
                    "Berapakah hasil dari operasi a * b?",
                    "Berapakah hasil dari operasi a / b?",
                    "Berapakah hasil dari operasi a % b?",
                    "Berapakah nilai a setelah operasi a++?",
                    "Berapakah nilai a setelah operasi a--?",
                    "Apakah hasil dari operasi a > b?",
                    "Apakah hasil dari operasi a == b?",
                    "Apakah hasil dari operasi a != b?",
                    "Apakah hasil dari operasi a >= b?",
                    "Apakah hasil dari operasi a <= b?",
                    "Apakah hasil dari operasi a && b?",
                    "Apakah hasil dari operasi a || b?",
                    "Berapakah hasil dari operasi a ~/ 2?"
                )
            )
        ),
        "Java" to mapOf(
            "basic" to mapOf(
                "Variabel dan Tipe Data" to listOf(
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?"
                ),
                "Operator" to listOf(
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?"
                ),
                "Percabangan" to listOf(
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?"
                ),
                "Perulangan" to listOf(
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?"
                ),
                "Struktur Data Array" to listOf(
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?"
                )
            )
        ),
        "HTML" to mapOf(
            "basic" to mapOf(
                "Elemen dan Tag" to listOf(
                    "Apa yang akan ditampilkan oleh tag <h1>?",
                    "Apa yang akan ditampilkan oleh tag <p>?",
                    "Apa yang dilakukan oleh tag <a>?",
                    "Apa fungsi dari atribut alt dalam tag <img>?",
                    "Apa yang akan ditampilkan oleh tag <ul>?",
                    "Apa yang akan ditampilkan oleh tag <ol>?",
                    "Apa yang akan ditampilkan oleh tag <div>?",
                    "Apa yang akan ditampilkan oleh tag <span>?",
                    "Apa yang akan ditampilkan oleh tag <table>?",
                    "Apa fungsi dari atribut placeholder dalam tag <input>?",
                    "Apa yang akan ditampilkan oleh tag <button>?",
                    "Apa yang akan ditampilkan oleh tag <textarea>?",
                    "Apa yang akan ditampilkan oleh tag <header>?",
                    "Apa yang akan ditampilkan oleh tag <footer>?",
                    "Apa yang akan ditampilkan oleh tag <nav>?"
                ),
                "Atribut" to listOf(
                    "Apa fungsi dari atribut 'alt' pada tag <img>?",
                    "Apa fungsi dari atribut 'href' pada tag <a>?",
                    "Apa fungsi dari atribut 'value' pada tag <input>?",
                    "Apa fungsi dari atribut 'disabled' pada tag <button>?",
                    "Apa fungsi dari atribut 'style' pada tag <div>?",
                    "Apa fungsi dari atribut 'checked' pada tag <input> tipe checkbox?",
                    "Apa fungsi dari atribut 'min' dan 'max' pada tag <input> tipe number?",
                    "Apa fungsi dari atribut 'title' pada tag <p>?",
                    "Apa fungsi dari atribut 'width' dan 'height' pada tag <img>?",
                    "Apa fungsi dari atribut 'placeholder' pada tag <input> tipe password?",
                    "Apa fungsi dari atribut 'target' pada tag <a>?",
                    "Apa fungsi dari atribut 'rel' pada tag <link>?",
                    "Apa fungsi dari atribut 'charset' pada tag <meta>?",
                    "Apa fungsi dari atribut 'controls' pada tag <audio>?",
                    "Apa fungsi dari atribut 'controls' pada tag <video>?"
                ),
                "Link dan Gambar" to listOf(
                    "Apa yang terjadi ketika pengguna mengklik tautan ini?",
                    "Apa yang akan ditampilkan oleh kode HTML ini?",
                    "Apa fungsi atribut target=\"_blank\" pada elemen anchor?",
                    "Apa yang akan terjadi jika pengguna mengklik tautan ini?",
                    "Apa yang dilakukan atribut width dan height pada elemen img?",
                    "Apa fungsi tautan dengan atribut href=\"mailto:example@example.com\"?",
                    "Apa fungsi atribut title pada elemen img?",
                    "Apa yang terjadi jika pengguna mengklik gambar pada kode HTML ini?",
                    "Apa fungsi tautan dengan atribut href=\"tel:+1234567890\"?",
                    "Bagaimana tampilan gambar pada kode HTML ini?",
                    "Apa fungsi atribut download pada elemen anchor?",
                    "Apa yang dilakukan class=\"responsive\" pada elemen img?",
                    "Apa fungsi atribut title pada elemen anchor?",
                    "Apa fungsi atribut usemap pada elemen img?",
                    "Apa yang dilakukan elemen map dan area pada kode HTML ini?"
                )
            )
        ),
        "CSS" to mapOf(
            "basic" to mapOf(
                "Selektor CSS" to listOf(
                    "Apa yang diubah oleh selektor ini?",
                    "Apa yang diubah oleh selektor ini?",
                    "Apa yang diubah oleh selektor ini?",
                    "Apa yang diubah oleh selektor ini?",
                    "Apa yang diubah oleh selektor ini?",
                    "Apa yang diubah oleh selektor ini?",
                    "Apa yang diubah oleh selektor ini?",
                    "Apa yang diubah oleh selektor ini?",
                    "Apa yang diubah oleh selektor ini?",
                    "Apa yang diubah oleh selektor ini?",
                    "Apa yang diubah oleh selektor ini?",
                    "Apa yang diubah oleh selektor ini?",
                    "Apa yang diubah oleh selektor ini?",
                    "Apa yang diubah oleh selektor ini?",
                    "Apa yang diubah oleh selektor ini?"
                ),
                "Margin dan Padding" to listOf(
                    "Berapa margin di semua sisi elemen div?",
                    "Berapa padding di semua sisi elemen div?",
                    "Berapa margin di bagian atas dan bawah elemen div?",
                    "Berapa padding di sisi kiri dan kanan elemen div?",
                    "Apa efek dari margin: 0 auto; pada elemen div?",
                    "Berapa persen padding di atas/bawah dan kiri/kanan elemen div?",
                    "Berapa margin di sisi-sisi elemen div yang diberikan dalam urutan atas, kanan, bawah, kiri?",
                    "Berapa padding di sisi-sisi elemen div yang diberikan dalam urutan atas, kanan, bawah, kiri?",
                    "Apa efek dari margin-left: auto; dan margin-right: auto; pada elemen div?",
                    "Berapa padding di bagian atas dan bawah elemen div?",
                    "Berapa margin di bagian bawah elemen div?",
                    "Berapa padding di sisi-sisi elemen div yang diberikan dalam urutan atas/bawah dan kiri/kanan?",
                    "Berapa margin di bagian atas elemen div?",
                    "Berapa padding di sisi-sisi elemen div yang diberikan dalam urutan atas, kanan, bawah, kiri?",
                    "Berapa margin di sisi-sisi elemen div yang diberikan dalam urutan atas/bawah dan kiri/kanan?"
                ),
                "Position CSS" to listOf(
                    "Dimanakah posisi elemen dengan style position: absolute; top: 50px; left: 100px;?",
                    "Dimanakah posisi elemen dengan style position: relative; top: 20px; left: 30px;?",
                    "Dimanakah posisi elemen dengan style position: fixed; bottom: 10px; right: 20px;?",
                    "Dimanakah posisi elemen dengan style position: sticky; top: 0;?",
                    "Dimanakah posisi elemen dengan style position: absolute; bottom: 0; right: 0;?",
                    "Dimanakah posisi elemen dengan style position: relative; bottom: 10px; right: 20px;?",
                    "Dimanakah posisi elemen dengan style position: fixed; top: 50px; left: 50px;?",
                    "Dimanakah posisi elemen dengan style position: sticky; bottom: 0;?",
                    "Dimanakah posisi elemen dengan style position: absolute; top: 0; right: 0;?",
                    "Dimanakah posisi elemen dengan style position: relative; top: 10px; left: 10px;?",
                    "Dimanakah posisi elemen dengan style position: fixed; bottom: 50px; left: 50px;?",
                    "Dimanakah posisi elemen dengan style position: sticky; top: 50px;?",
                    "Dimanakah posisi elemen dengan style position: absolute; bottom: 50px; left: 100px;?",
                    "Dimanakah posisi elemen dengan style position: relative; top: 30px; right: 30px;?",
                    "Dimanakah posisi elemen dengan style position: fixed; top: 0; right: 0;?"
                ),
                "Border CSS" to listOf(
                    "Bagaimana border yang akan diterapkan pada elemen div?",
                    "Bagaimana border yang akan diterapkan pada elemen div?",
                    "Bagaimana border yang akan diterapkan pada bagian atas elemen div?",
                    "Bagaimana border yang akan diterapkan pada bagian kanan elemen div?",
                    "Bagaimana border yang akan diterapkan pada bagian bawah elemen div?",
                    "Bagaimana border yang akan diterapkan pada bagian kiri elemen div?",
                    "Bagaimana border yang akan diterapkan pada elemen div?",
                    "Bagaimana border yang akan diterapkan pada elemen div?",
                    "Bagaimana border yang akan diterapkan pada elemen div?",
                    "Bagaimana border yang akan diterapkan pada elemen div?",
                    "Bagaimana border yang akan diterapkan pada elemen div?",
                    "Bagaimana border yang akan diterapkan pada elemen div?",
                    "Bagaimana border yang akan diterapkan pada elemen div?",
                    "Bagaimana border yang akan diterapkan pada elemen div?",
                    "Bagaimana border yang akan diterapkan pada elemen div?"
                ),
                "Properti Font dan Warna" to listOf(
                    "Apa warna teks pada elemen <p>?",
                    "Berapa ukuran font pada elemen <h1>?",
                    "Apa warna latar belakang pada elemen <div>?",
                    "Apa warna teks pada elemen <span>?",
                    "Apa keluarga font yang digunakan pada elemen <p>?",
                    "Apa warna teks pada elemen <h2>?",
                    "Apa warna latar belakang pada elemen <body>?",
                    "Apa warna teks pada elemen <p> dengan transparansi?",
                    "Berapa ukuran font pada elemen <h1> dalam satuan em?",
                    "Apa warna teks pada elemen <div> dalam format HSL?",
                    "Bagaimana ketebalan font pada elemen <p>?",
                    "Apa warna teks pada elemen <span>?",
                    "Apa keluarga font yang digunakan pada elemen <h2>?",
                    "Apa warna teks pada elemen <body>?",
                    "Bagaimana gaya font pada elemen <p>?"
                )
            )
        ),
        "JavaScript" to mapOf(
            "basic" to mapOf(
                "Dasar-dasar JavaScript" to listOf(
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?"
                ),
                "Tipe Operator" to listOf(
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?"
                ),
                "Deklarasi Variabel" to listOf(
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?"
                ),
                "JSON" to listOf(
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?",
                    "Apa output dari kode tersebut?"
                )
            )
        )
    )

    private val choicesMap = mapOf(
        "Python" to mapOf(
            "basic" to mapOf(
                "Tipe Data dan Variabel" to listOf(
                    listOf("100", "0", "5", "2"),
                    listOf("4", "51", "89", "50"),
                    listOf("Alice is 25 years old", "Alice is 4 years old", "Budi is 25 years old", "Alicia is 25 years old"),
                    listOf("75", "17", "15", "l5"),
                    listOf("55", "12", "4", "15"),
                    listOf("45", "14", "0", "3"),
                    listOf("Hello Joko", "Hello Ahmad", "Hello World", "WolrdHello"),
                    listOf("457", "142", "0", "25"),
                    listOf("2.5", "25.0", "25", "0.0"),
                    listOf("9.0", "67.0", "234", "3.0"),
                    listOf("1", "3", "2", "4"),
                    listOf("bob", "obb", "bbo", "Bob"),
                    listOf("7", "6", "1", "4"),
                    listOf("130", "13o", "122", "167"),
                    listOf("6", "1", "3", "6")
                ),
                "Tipe Data List" to listOf(
                    listOf("cherry", "apple", "pisang", "banana"),
                    listOf("[1, 2, 3, 4, 5, 6]", "[1, 2, 3, 4, 5, 9]", "[10, 2, 3, 4, 5, 6]", "[0,1, 2, 3, 4, 5, 6]"),
                    listOf("[\"a\", \"c\", \"d\"]", "[\"a\", \"b\", \"d\"]", "[\"ab\", \"b\", \"d\"]", "[\"a\", \"b\", \"de\"]"),
                    listOf("[100, 25, 30]", "[10, 25, 300]", "[10, 25, 30]", "[10, 255, 30]"),
                    listOf("[1, 2, 3, 4, 5]", "[1, 2, 3, 4, 5, 6]", "[0, 1, 2, 3, 4, 5]", "[1, 2, 4, 5]"),
                    listOf("[\"item1\", \"item4\", \"item2\", \"item6\"]", "[\"item1\", \"item4\", \"item2\", \"item3\"]", "[\"item11\", \"item4\", \"item2\", \"item3\"]", "[\"item1\", \"item4\", \"item2\", \"item311\"]"),
                    listOf("[10, 20, 30, 40, 50]", "[10, 20, 30, 40, 0]", "[101, 20, 30, 40, 50]", "[10, 20, 0, 40, 50]"),
                    listOf("[100, 300]", "[100, 3000]", "[1000, 300]", "[1000, 3000]"),
                    listOf("[5, 2, 3, 4]", "[5, 2, 3]", "[5, 2, 35]", "[53, 24, 3]"),
                    listOf("\"blue\"", "\"Blue\"", "\"bule\"", "\"blueo\""),
                    listOf("[2, 3, 4, 6]", "[2, 3, 4, 5]", "[2, 3, 4]", "[1, 2, 3, 4]"),
                    listOf("[10, 20, 40]", "[10, 20, 4011]", "[1000, 20, 40]", "[10, 20, 40000]"),
                    listOf("True Cuy", "True", "Betul", "Benar"),
                    listOf("[1, 3, 5, 9, 2]", "[1, 3, 5]", "[1, 2, 3, 5, 9]", "[1, 3, 5, 9]"),
                    listOf("[[1, 2, 3], [4, 5, 6]]", "[[0, 1, 2, 3], [4, 5, 6]]", "[[1, 2, 3], [4, 5, 6, 7]]", "[[11, 22, 33], [4, 5, 6]]")
                ),
                "Tipe Data Tupple" to listOf(
                    listOf("1", "2", "3", "4"),
                    listOf("1", "2", "3", "4"),
                    listOf("2", "3", "4", "5"),
                    listOf("(1, 2)", "(2, 3)", "(2, 3, 4)", "(1, 2, 3)"),
                    listOf("(1, 2, 3, 4)", "(1, 2, 3, 4, 5)", "(5,)", "(1, 2, 3, 4, 5, 6)"),
                    listOf("(1, 2, 3, 4, 5, 6)", "(4, 5, 6, 1, 2, 3)", "(1, 2, 3)", "(4, 5, 6)"),
                    listOf("True", "False", "benar", "selalu benar"),
                    listOf("True", "False", "salah", "selalu salah"),
                    listOf("1", "2", "3", "4"),
                    listOf("0", "1", "2", "3"),
                    listOf("0", "1", "2", "3"),
                    listOf("(1, 2, 3, 4, 5, 6)", "(5, 6)", "(1, 2, 3, 4)", "(6, 5, 4, 3, 2, 1)"),
                    listOf("(1, 2, 3, 4, 1, 2, 3, 4)", "(2, 4, 6, 8)", "(1, 2, 3, 4, 4, 3, 2, 1)", "(1, 2, 3, 4, 1, 2, 3)"),
                    listOf("5", "(5, 2, 3, 4)", "Error", "Tidak ada output"),
                    listOf("1", "2", "3", "4")
                ),
                "Input dan Output" to listOf(
                    listOf("Hello, Alice", "Hi, Alice", "Greetings, Alice", "Salam, Alice"),
                    listOf("You are 30 years old", "You are thirty years old", "You are 30 years", "You are old"),
                    listOf("Sum: 7", "Sum: 3 + 4", "Sum: 34", "Sum: seven"),
                    listOf("Product: 10.0", "Product: 10", "Product: 20", "Product: 10.00"),
                    listOf("Python-is-fun", "Python is fun", "Python_is_fun", "Python-is-fun-"),
                    listOf("First line Second line", "First lineSecond line", "First line, Second line", "First line Second line "),
                    listOf("My name is Alice and I am 25 years old", "My name is Alice. I am 25 years old", "I am Alice and I am 25 years old", "My name is Alice and I am twenty-five years old"),
                    listOf("Hello Bob, you are 30 years old", "Hi Bob, you are 30 years old", "Hello Bob, you are thirty years old", "Greetings Bob, you are 30 years old"),
                    listOf("Hello Charlie, you are 35 years old", "Hi Charlie, you are 35 years old", "Hello Charlie, you are thirty-five years old", "Greetings Charlie, you are 35 years old"),
                    listOf("The value of pi is approximately 3.14", "The value of pi is approximately 3.14159", "The value of pi is approximately 3.141", "The value of pi is approximately 3.15"),
                    listOf("Hello, David. You are 40.", "Hello, David. You are forty.", "Hi, David. You are 40.", "Greetings, David. You are 40."),
                    listOf("The number you entered is 10", "The number you entered is ten", "You entered the number 10", "The number you entered is 100"),
                    listOf("Learning*Python*is*easy!", "Learning Python is easy!", "Learning_Python_is_easy!", "Learning-Python-is-easy!"),
                    listOf("Good...Morning", "Good Morning", "Good. Morning", "Good... Morning"),
                    listOf("Nice to meet you, Eve!", "Good to meet you, Eve!", "Pleased to meet you, Eve!", "Hello Eve, nice to meet you!")
                ),
                "Percabangan" to listOf(
                    listOf("Positive", "Negative", "Zero", "Error"),
                    listOf("Positive", "Negative", "Zero", "Error"),
                    listOf("x is greater than y", "x is not greater than y", "x is equal to y", "Error"),
                    listOf("x is greater than y", "x is not greater than y", "x is equal to y", "Error"),
                    listOf("x is equal to y", "x is not equal to y", "x is greater than y", "Error"),
                    listOf("x is greater than or equal to y", "x is not greater than or equal to y", "x is less than or equal to y", "Error"),
                    listOf("Even", "Odd", "Zero", "Error"),
                    listOf("Positive", "Negative", "Zero", "Error"),
                    listOf("x is greater than y", "x is less than y", "x is equal to y", "Error"),
                    listOf("Adult", "Not an adult", "Teenager", "Error"),
                    listOf("A", "B", "C", "D"),
                    listOf("x is greater than y", "x is less than y", "x is equal to y", "Error"),
                    listOf("Weekend", "Weekday", "Holiday", "Error"),
                    listOf("Divisible by both 2 and 3", "Divisible by 2", "Divisible by 3", "Not divisible by 2 or 3"),
                    listOf("Hot", "Warm", "Cold", "Error")
                ),
                "Perulangan" to listOf(
                    listOf("0\n1\n2\n3\n4", "1\n2\n3\n4\n5", "0\n1\n2\n3\n4\n5", "Error"),
                    listOf("10", "15", "20", "25"),
                    listOf("1\n3\n5\n7\n9", "2\n4\n6\n8\n10", "1\n2\n3\n4\n5", "Error"),
                    listOf("5\n4\n3\n2\n1", "4\n3\n2\n1\n0", "5\n4\n3\n2\n1\n0", "Error"),
                    listOf("0\n1\n2\n3\n4", "1\n2\n3\n4\n5", "0\n1\n2\n3\n4\n5", "Error"),
                    listOf("5\n4\n3\n2\n1", "4\n3\n2\n1\n0", "5\n4\n3\n2\n1\n0", "Error"),
                    listOf("0\n1\n2", "1\n2\n3", "0\n1\n2\n3", "Error"),
                    listOf("0\n1\n2\n4", "1\n2\n3\n5", "0\n1\n2\n3\n4", "Error"),
                    listOf("0 0\n0 1\n1 0\n1 1", "1 0\n1 1\n2 0\n2 1", "0 1\n1 0\n1 1\n2 0", "Error"),
                    listOf("0\n1\n2", "1\n2\n3", "0\n1\n2\n3", "Error"),
                    listOf("0\n1\n2\n4", "1\n2\n3\n5", "0\n1\n2\n3\n4", "Error"),
                    listOf("0 1\n0 2\n1 2", "1 0\n1 1\n2 0\n2 1", "0 1\n1 0\n1 2\n2 0", "Error"),
                    listOf("*\n**\n***", "1\n22\n333", "*\n**\n***\n****", "Error"),
                    listOf("1\n12\n123\n1234\n12345", "1\n22\n333", "1\n12\n123\n1234", "Error"),
                    listOf("0\n1\n2\nLoop completed", "1\n2\n3\nLoop completed", "0\n1\n2\n3\nLoop completed", "Error")
                )
            ),
            "Intermediate" to mapOf(
                "Fungsi" to listOf(
                    listOf("Hello, Alice!", "Hi, Alice!", "Hey, Alice!", "Greetings, Alice!"),
                    listOf("3", "5", "6", "4"),
                    listOf("120", "24", "60", "720"),
                    listOf("True", "False", "None", "Error"),
                    listOf("[1, 4, 9, 16]", "[1, 2, 3, 4]", "[1, 8, 27, 64]", "[2, 3, 4, 5]"),
                    listOf("5", "10", "15", "Error"),
                    listOf("15", "10", "20", "25"),
                    listOf("olleh", "hello", "helo", "lleho"),
                    listOf("8", "13", "21", "5"),
                    listOf("1", "2", "3", "4"),
                    listOf("2", "3", "4", "5"),
                    listOf("12", "7", "10", "15"),
                    listOf("True", "False", "None", "Error"),
                    listOf("Hi, Bob!", "Hello, Bob!", "Hey, Bob!", "Greetings, Bob!"),
                    listOf("8", "4", "6", "10")
                ),
                "Recursive Function" to listOf(
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( )
                ),
                "Lambda Function" to listOf(
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( )

                ),
                "Recursive Function" to listOf(
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( ),
                    listOf( )
                ),
            )
        ),
        "Kotlin" to mapOf(
            "basic" to mapOf(
                "Activity" to listOf(
                    listOf("Menginisialisasi activity", "Menghentikan activity", "Melanjutkan activity", "Menghancurkan activity"),
                    listOf("Setelah onCreate", "Setelah onResume", "Sebelum onCreate", "Sebelum onPause"),
                    listOf("Setelah onStart", "Setelah onPause", "Sebelum onStart", "Sebelum onStop"),
                    listOf("Menjalankan operasi saat activity di-pause", "Menghentikan operasi saat activity di-pause", "Melanjutkan operasi saat activity di-pause", "Menginisialisasi operasi saat activity di-pause"),
                    listOf("Setelah onPause", "Setelah onResume", "Sebelum onPause", "Sebelum onDestroy"),
                    listOf("Membersihkan sumber daya", "Menghentikan operasi", "Menginisialisasi operasi", "Melanjutkan operasi"),
                    listOf("Setelah onStop", "Setelah onStart", "Sebelum onStart", "Sebelum onCreate"),
                    listOf("Menjalankan operasi saat tombol ditekan", "Menghentikan operasi saat tombol ditekan", "Menginisialisasi operasi saat tombol ditekan", "Menghancurkan operasi saat tombol ditekan"),
                    listOf("Menyimpan status instance", "Memuat status instance", "Menghentikan status instance", "Menginisialisasi status instance"),
                    listOf("Memuat status instance yang disimpan", "Menyimpan status instance", "Menghentikan status instance", "Menginisialisasi status instance"),
                    listOf("Menangani back press", "Menghentikan back press", "Menginisialisasi back press", "Melanjutkan back press"),
                    listOf("Menambahkan fragment ke activity", "Menghapus fragment dari activity", "Menghentikan fragment di activity", "Melanjutkan fragment di activity"),
                    listOf("Meng-inflate menu ke activity", "Menghentikan menu di activity", "Menginisialisasi menu di activity", "Melanjutkan menu di activity"),
                    listOf("Menangani item menu yang dipilih", "Menghentikan item menu yang dipilih", "Menginisialisasi item menu yang dipilih", "Melanjutkan item menu yang dipilih"),
                    listOf("Menangani hasil dari activity lain", "Menghentikan hasil dari activity lain", "Menginisialisasi hasil dari activity lain", "Melanjutkan hasil dari activity lain")
                ),
                "Intent" to listOf(
                    listOf("Memulai SecondActivity", "Memulai MainActivity", "Mengirim data", "Menerima data"),
                    listOf("Membuka halaman web", "Mengirim email", "Memulai SecondActivity", "Mengirim pesan"),
                    listOf("Memulai dialer", "Memulai kamera", "Mengirim email", "Membuka halaman web"),
                    listOf("Mengirim teks", "Mengirim gambar", "Memulai SecondActivity", "Membuka halaman web"),
                    listOf("Memilih gambar", "Memulai dialer", "Mengirim teks", "Memulai SecondActivity"),
                    listOf("Memulai kamera", "Mengirim email", "Memilih gambar", "Memulai SecondActivity"),
                    listOf("Mengirim data ke SecondActivity", "Memulai dialer", "Memilih gambar", "Memulai SecondActivity tanpa data"),
                    listOf("Memulai SecondActivity dengan task baru", "Memulai SecondActivity dengan data", "Memulai kamera", "Memilih gambar"),
                    listOf("Menghapus semua activity di atas SecondActivity", "Mengirim data ke SecondActivity", "Memulai dialer", "Memilih gambar"),
                    listOf("Mengirim data ke SecondActivity dan menunggu hasil", "Memulai dialer", "Mengirim email", "Membuka halaman web"),
                    listOf("Mengirim email", "Memulai dialer", "Memilih gambar", "Memulai SecondActivity"),
                    listOf("Membuka lokasi di peta", "Memulai dialer", "Mengirim email", "Memilih gambar"),
                    listOf("Membuka pengaturan perangkat", "Memulai dialer", "Mengirim email", "Memilih gambar"),
                    listOf("Mengirim gambar", "Mengirim teks", "Memulai SecondActivity", "Membuka halaman web"),
                    listOf("Mengirim daftar Parcelable ke SecondActivity", "Memulai dialer", "Mengirim email", "Memilih gambar")
                ),
                "View dan ViewGroup" to listOf(
                    listOf("Membuat TextView dengan teks 'Hello, World!'", "Membuat Button dengan teks 'Hello, World!'", "Membuat TextView kosong", "Tidak melakukan apapun"),
                    listOf("Membuat Button dengan teks 'Click Me' dan menampilkan Toast saat diklik", "Membuat Button tanpa teks", "Membuat TextView", "Tidak melakukan apapun"),
                    listOf("Membuat LinearLayout dengan orientasi vertikal", "Membuat RelativeLayout", "Membuat FrameLayout", "Membuat ConstraintLayout"),
                    listOf("Menambahkan TextView ke RelativeLayout", "Menambahkan Button ke RelativeLayout", "Menambahkan ImageView ke RelativeLayout", "Tidak melakukan apapun"),
                    listOf("Menambahkan Button ke FrameLayout", "Menambahkan TextView ke FrameLayout", "Menambahkan ImageView ke FrameLayout", "Tidak melakukan apapun"),
                    listOf("Menambahkan TextView ke ConstraintLayout", "Menambahkan Button ke ConstraintLayout", "Menambahkan ImageView ke ConstraintLayout", "Tidak melakukan apapun"),
                    listOf("Mengatur layoutParams untuk TextView", "Mengatur teks untuk TextView", "Mengatur gambar untuk ImageView", "Tidak melakukan apapun"),
                    listOf("Mengatur gambar untuk ImageView", "Mengatur teks untuk ImageView", "Mengatur hint untuk EditText", "Tidak melakukan apapun"),
                    listOf("Membuat EditText dengan hint 'Enter your name'", "Membuat TextView dengan teks 'Enter your name'", "Membuat Button dengan teks 'Enter your name'", "Tidak melakukan apapun"),
                    listOf("Menambahkan TextView ke ScrollView", "Menambahkan Button ke ScrollView", "Menambahkan ImageView ke ScrollView", "Tidak melakukan apapun"),
                    listOf("Mengatur jumlah baris dan kolom untuk GridLayout", "Mengatur orientasi LinearLayout", "Mengatur layoutParams untuk TextView", "Tidak melakukan apapun"),
                    listOf("Mengatur layoutManager untuk RecyclerView", "Mengatur adapter untuk ListView", "Mengatur layoutParams untuk TextView", "Tidak melakukan apapun"),
                    listOf("Mengatur adapter untuk ListView", "Mengatur layoutManager untuk RecyclerView", "Mengatur hint untuk EditText", "Tidak melakukan apapun"),
                    listOf("Menambahkan TextView ke CardView", "Menambahkan Button ke CardView", "Menambahkan ImageView ke CardView", "Tidak melakukan apapun"),
                    listOf("Menambahkan TextView dan Button ke LinearLayout dengan orientasi horizontal", "Menambahkan TextView dan Button ke LinearLayout dengan orientasi vertikal", "Menambahkan TextView dan Button ke RelativeLayout", "Tidak melakukan apapun")
                ),
                "Style dan Theme" to listOf(
                    listOf("Mengatur tampilan teks pada TextView menggunakan style 'MyTextStyle'", "Mengatur teks pada TextView menjadi 'Hello, World!'", "Mengatur ukuran teks pada TextView", "Mengatur warna teks pada TextView"),
                    listOf("Mengatur latar belakang Button menggunakan resource 'my_button_background'", "Mengatur teks pada Button menjadi 'Click Me'", "Mengatur ukuran teks pada Button", "Mengatur warna teks pada Button"),
                    listOf("Mengatur tampilan teks pada TextView menggunakan style 'MyTextStyle'", "Mengatur teks pada TextView menjadi 'Styled Text'", "Mengatur ukuran teks pada TextView", "Mengatur warna teks pada TextView"),
                    listOf("Mengatur tampilan teks pada TextView menggunakan tema 'MyTextStyle'", "Mengatur teks pada TextView menjadi 'Styled with Theme'", "Mengatur ukuran teks pada TextView", "Mengatur warna teks pada TextView"),
                    listOf("Mengatur tampilan Button menggunakan tema 'MyButtonStyle'", "Mengatur teks pada Button menjadi 'Styled Button'", "Mengatur ukuran teks pada Button", "Mengatur warna teks pada Button"),
                    listOf("Mengatur tampilan LinearLayout menggunakan tema 'MyLinearLayoutStyle'", "Mengatur orientasi LinearLayout menjadi vertikal", "Mengatur ukuran LinearLayout", "Mengatur warna LinearLayout"),
                    listOf("Mengatur tampilan EditText menggunakan style 'MyEditTextStyle'", "Mengatur hint pada EditText menjadi 'Enter your name'", "Mengatur ukuran teks pada EditText", "Mengatur warna teks pada EditText"),
                    listOf("Mengatur warna teks pada TextView menggunakan warna 'myTextColor'", "Mengatur teks pada TextView menjadi 'Hello, World!'", "Mengatur ukuran teks pada TextView", "Mengatur padding pada TextView"),
                    listOf("Mengatur latar belakang Button menggunakan warna 'myButtonColor'", "Mengatur teks pada Button menjadi 'Submit'", "Mengatur ukuran teks pada Button", "Mengatur padding pada Button"),
                    listOf("Mengatur ukuran teks pada TextView menjadi 18sp", "Mengatur teks pada TextView menjadi 'Styled Text'", "Mengatur warna teks pada TextView", "Mengatur padding pada TextView"),
                    listOf("Mengatur gambar pada ImageView menggunakan resource 'my_image'", "Mengatur filter warna pada ImageView menggunakan warna 'myImageColor'", "Mengatur ukuran ImageView", "Mengatur padding pada ImageView"),
                    listOf("Mengatur font pada TextView menggunakan font 'myFont'", "Mengatur teks pada TextView menjadi 'Hello, World!'", "Mengatur ukuran teks pada TextView", "Mengatur warna teks pada TextView"),
                    listOf("Mengatur jenis huruf pada TextView menjadi 'sans-serif-light'", "Mengatur teks pada TextView menjadi 'Hello, World!'", "Mengatur ukuran teks pada TextView", "Mengatur warna teks pada TextView"),
                    listOf("Mengatur padding pada TextView menjadi 16dp", "Mengatur teks pada TextView menjadi 'Hello, World!'", "Mengatur ukuran teks pada TextView", "Mengatur warna teks pada TextView"),
                    listOf("Mengatur orientasi LinearLayout menjadi horizontal dan padding menjadi 16dp", "Mengatur orientasi LinearLayout menjadi vertikal dan padding menjadi 16dp", "Mengatur ukuran LinearLayout", "Mengatur warna LinearLayout")
                ),
                "Recycler View" to listOf(
                    listOf("Mengatur layout manager menjadi LinearLayoutManager", "Mengatur layout manager menjadi GridLayoutManager", "Mengatur layout manager menjadi StaggeredGridLayoutManager", "Mengatur adapter untuk RecyclerView"),
                    listOf("Mengatur layout manager menjadi GridLayoutManager dengan 2 kolom", "Mengatur layout manager menjadi LinearLayoutManager", "Mengatur layout manager menjadi StaggeredGridLayoutManager", "Mengatur adapter untuk RecyclerView"),
                    listOf("Mengatur layout manager menjadi StaggeredGridLayoutManager dengan 2 kolom", "Mengatur layout manager menjadi GridLayoutManager", "Mengatur layout manager menjadi LinearLayoutManager", "Mengatur adapter untuk RecyclerView"),
                    listOf("Mengatur adapter untuk RecyclerView", "Mengatur layout manager menjadi LinearLayoutManager", "Mengatur layout manager menjadi GridLayoutManager", "Mengatur layout manager menjadi StaggeredGridLayoutManager"),
                    listOf("Mengatur adapter untuk RecyclerView", "Mengatur layout manager menjadi LinearLayoutManager", "Mengatur layout manager menjadi GridLayoutManager", "Mengatur layout manager menjadi StaggeredGridLayoutManager"),
                    listOf("Mengatur RecyclerView agar memiliki ukuran tetap", "Mengatur RecyclerView agar memiliki ukuran fleksibel", "Mengatur adapter untuk RecyclerView", "Mengatur layout manager untuk RecyclerView"),
                    listOf("Menambahkan DividerItemDecoration ke RecyclerView", "Menambahkan adapter untuk RecyclerView", "Mengatur layout manager untuk RecyclerView", "Mengatur item animator untuk RecyclerView"),
                    listOf("Mengatur item animator untuk RecyclerView", "Menambahkan DividerItemDecoration ke RecyclerView", "Menambahkan adapter untuk RecyclerView", "Mengatur layout manager untuk RecyclerView"),
                    listOf("Menambahkan swipe to delete ke RecyclerView", "Menambahkan item animator ke RecyclerView", "Menambahkan DividerItemDecoration ke RecyclerView", "Mengatur layout manager untuk RecyclerView"),
                    listOf("Menambahkan snap helper ke RecyclerView", "Menambahkan swipe to delete ke RecyclerView", "Menambahkan item animator ke RecyclerView", "Menambahkan DividerItemDecoration ke RecyclerView"),
                    listOf("Menambahkan scroll listener ke RecyclerView", "Menambahkan snap helper ke RecyclerView", "Menambahkan swipe to delete ke RecyclerView", "Menambahkan item animator ke RecyclerView"),
                    listOf("Mengatur adapter untuk RecyclerView dan memperbarui data", "Menambahkan DividerItemDecoration ke RecyclerView", "Menambahkan snap helper ke RecyclerView", "Menambahkan swipe to delete ke RecyclerView"),
                    listOf("Mengatur layout manager menjadi LinearLayoutManager horizontal", "Mengatur layout manager menjadi GridLayoutManager", "Mengatur layout manager menjadi StaggeredGridLayoutManager", "Mengatur adapter untuk RecyclerView"),
                    listOf("Mengatur adapter dan layout manager untuk RecyclerView", "Menambahkan DividerItemDecoration ke RecyclerView", "Menambahkan snap helper ke RecyclerView", "Menambahkan swipe to delete ke RecyclerView"),
                    listOf("Mengatur ViewHolder untuk RecyclerView", "Mengatur adapter untuk RecyclerView", "Mengatur layout manager untuk RecyclerView", "Menambahkan DividerItemDecoration ke RecyclerView")
                )
            )
        ),
        // Tambahkan data untuk Dart, Java, HTML, CSS, dan JavaScript di sini
        "Dart" to mapOf(
            "basic" to mapOf(
                "Fungsi Input dan Output" to listOf(
                    listOf("Membaca input dari pengguna", "Menampilkan output tanpa baris baru", "Menampilkan output dengan baris baru", "Mengakhiri program"),
                    listOf("Mengubah input menjadi string", "Mengubah input menjadi integer", "Mengubah input menjadi double", "Mengubah input menjadi Boolean"),
                    listOf("Membaca input dari pengguna", "Menghitung usia pengguna", "Mengubah input menjadi integer", "Menulis output ke konsol"),
                    listOf("(suhuCelsius * 5/9) + 32", "(suhuCelsius + 32) * 5/9", "(suhuCelsius * 9/5) + 32", "(suhuCelsius + 32) * 9/5"),
                    listOf("Panjang kalimat: 10", "Panjang kalimat: 12", "Panjang kalimat: 13","Panjang kalimat: 11"),
                    listOf("Mengalikan angka dengan dirinya sendiri", "Menambah angka dengan dirinya sendiri", "Mengurangi angka dengan dirinya sendiri", "Membagi angka dengan dirinya sendiri" ),
                    listOf("Menggabungkan kata menjadi satu karakter", "Mengubah kata menjadi huruf besar", "Menghitung jumlah karakter dalam kata", "Memisahkan kata menjadi karakter-karakter terbalik"),
                    listOf("harga * 0.1", "harga * 0.9", "harga - (harga * 0.1)", "harga / 0.9"),
                    listOf("Menjumlahkan nilai pertama dan kedua", "Membagi nilai pertama dengan kedua", "Menghitung rata-rata dari dua nilai", "Mengalikan nilai pertama dengan kedua"),
                    listOf("Menggunakan join(' ')", "Menggunakan length", "Menggunakan split(' ')", "Menggunakan reversed"),
                    listOf("Mengubah double menjadi integer", "Mengubah integer menjadi double", "Mengubah string menjadi integer", "Mengubah string menjadi double"),
                    listOf("Nama lengkap: John Doe", "Nama lengkap: John", "Nama lengkap: Doe", "Nama lengkap: JohnDoe"),
                    listOf("Mengubah kata menjadi huruf besar", "Mengubah kata menjadi huruf kecil", "Mengubah kata menjadi huruf tebal", "Mengubah kata menjadi huruf miring"),
                    listOf("Menghitung total harga", "Menghitung harga per barang", "Menghitung jumlah barang", "Menghitung diskon barang"),
                    listOf("Angka tersebut adalah genap", "Angka tersebut adalah ganjil", "Angka tersebut adalah positif", "Angka tersebut adalah negatif" )
                ),
                "Operator" to listOf(
                    listOf("12", "13", "11", "14"),
                    listOf("12", "10", "11", "9" ),
                    listOf("42", "41", "40", "39"),
                    listOf("4.5", "5", "5.5", "6"),
                    listOf("1", "2", "3", "4"),
                    listOf("5", "6", "7", "8"),
                    listOf("9", "6", "7", "8"),
                    listOf("true", "false", "benar", "salah"),
                    listOf("true", "false", "benar", "salah"),
                    listOf("true", "false", "benar", "salah"),
                    listOf("true", "false", "benar", "salah"),
                    listOf("true", "false", "benar", "salah"),
                    listOf("true", "false", "benar", "salah"),
                    listOf("true", "false", "benar", "salah"),
                    listOf("5", "2", "3", "4")
                )
            )
        ),
        "Java" to mapOf(
            "basic" to mapOf(
                "Variabel dan Tipe Data" to listOf(
                    listOf("5", "10", "15", "20"),
                    listOf("5.5", "10.5", "15.5", "20.5"),
                    listOf("A", "B", "C", "D"),
                    listOf("true", "false", "null", "undefined"),
                    listOf("Hello", "World", "Hello World", "Hi"),
                    listOf("30", "40", "50", "60"),
                    listOf("31.0", "41.0", "51.0", "61.0"),
                    listOf("Hello World", "World Hello", "Hello", "World"),
                    listOf("25", "15", "10", "5"),
                    listOf("5.5", "10.5", "15.5", "20.5"),
                    listOf("100000", "200000", "300000", "400000"),
                    listOf("100", "200", "300", "400"),
                    listOf("1000", "2000", "3000", "4000"),
                    listOf("5", "10", "15", "20"),
                    listOf("1", "2", "3", "4")
                ),
                "Operator" to listOf(
                    listOf("15", "10", "5", "20"),
                    listOf("15", "20", "25", "10"),
                    listOf("20", "10", "5", "15"),
                    listOf("5", "10", "20", "4"),
                    listOf("1", "2", "3", "0"),
                    listOf("5", "6", "7", "4"),
                    listOf("4", "5", "6", "3"),
                    listOf("true", "false", "1", "0"),
                    listOf("true", "false", "1", "0"),
                    listOf("true", "false", "1", "0"),
                    listOf("true", "false", "1", "0"),
                    listOf("true", "false", "1", "0"),
                    listOf("true", "false", "1", "0"),
                    listOf("true", "false", "1", "0"),
                    listOf("true", "false", "1", "0")
                ),
                "Percabangan" to listOf(
                    listOf("x lebih besar dari 5", "x lebih kecil dari 5", "x sama dengan 5", "x tidak sama dengan 5"),
                    listOf("x lebih besar dari 5", "x lebih kecil dari 5", "x sama dengan 5", "x tidak sama dengan 5"),
                    listOf("x lebih besar dari 5", "x lebih kecil dari 5", "x sama dengan 5", "x tidak sama dengan 5"),
                    listOf("x lebih besar dari 5", "x lebih kecil dari 5", "x sama dengan 5", "x tidak sama dengan 5"),
                    listOf("x lebih besar dari 5", "x lebih kecil dari 5", "x sama dengan 5", "x lebih besar atau sama dengan 2"),
                    listOf("x lebih besar dari 5", "x lebih kecil dari 5", "x lebih kecil atau sama dengan 5", "x lebih besar atau sama dengan 2"),
                    listOf("x lebih besar dari 5", "x tidak lebih besar dari 5", "x sama dengan 5", "x tidak sama dengan 5"),
                    listOf("x lebih besar dari 5", "x tidak lebih besar dari 5", "x lebih kecil dari 5", "x tidak lebih kecil dari 5"),
                    listOf("x lebih besar dari 5", "x tidak lebih besar dari 5", "x sama dengan 5", "x tidak sama dengan 5"),
                    listOf("x lebih besar dari 5", "x tidak lebih besar dari 5", "x tidak sama dengan 5", "x sama dengan 5"),
                    listOf("x lebih besar dari 5", "x tidak lebih besar dari 5", "x lebih besar atau sama dengan 2", "x lebih kecil dari 2"),
                    listOf("x lebih besar dari 5", "x lebih kecil atau sama dengan 5", "x lebih besar atau sama dengan 2", "x lebih kecil dari 2"),
                    listOf("x lebih besar dari 5", "x sama dengan 5", "x tidak lebih besar dari 5", "x lebih besar atau sama dengan 2"),
                    listOf("x lebih besar dari 5", "x sama dengan 5", "x tidak lebih besar dari 5", "x lebih besar atau sama dengan 2"),
                    listOf("x lebih besar dari 5", "x sama dengan 5", "x tidak lebih besar dari 5", "x lebih kecil dari 5")
                ),
                "Perulangan" to listOf(
                    listOf("0 1 2 3 4", "0 1 2 3", "1 2 3 4 5", "1 2 3 4"),
                    listOf("0 1 2 3 4", "0 1 2 3", "1 2 3 4 5", "1 2 3 4"),
                    listOf("0 1 2 3 4", "0 1 2 3", "1 2 3 4 5", "1 2 3 4"),
                    listOf("0 2 4 6 8", "0 2 4 6", "2 4 6 8", "2 4 6"),
                    listOf("5 4 3 2 1", "4 3 2 1 0", "4 3 2 1", "5 4 3 2"),
                    listOf("10 9 8 7 6", "10 9 8 7 6 5", "9 8 7 6 5", "9 8 7 6"),
                    listOf("10 9 8 7 6", "10 9 8 7 6 5", "9 8 7 6 5", "9 8 7 6"),
                    listOf("1 4 9 16 25", "1 2 3 4 5", "1 4 9 16", "1 4 9"),
                    listOf("1 3 5", "2 4", "1 2 3 4 5", "3 4 5"),
                    listOf("2 4", "1 3 5", "1", "2"),
                    listOf("1 2 3 4 5 6 7 8 9", "1 2 3 4 5 6 7 8", "1 2 3 4 5 6", "1 2 3 4 5 6 7 8 9 10"),
                    listOf("0 1 2 3 4 5", "0 1 2 3 4", "1 2 3 4 5", "1 2 3 4"),
                    listOf("0 1 2 1 2 3 2 3 4", "0 1 2 1 2", "0 1 1 2", "1 2 2 3"),
                    listOf("0 1 2 4", "0 1 2 3 4", "0 1 2 4", "0 1 4"),
                    listOf("0 1 2", "0 1 2 3 4", "0 1 2 3", "1 2 3 4")
                ),
                "Struktur Data Array" to listOf(
                    listOf("1", "2", "3", "4"),
                    listOf("1", "2", "3", "4"),
                    listOf("3", "4", "5", "6"),
                    listOf("1", "2", "3", "5"),
                    listOf("5", "10", "3", "4"),
                    listOf("10", "15", "20", "25"),
                    listOf("0", "1", "2", "3"),
                    listOf("3", "4", "5", "6"),
                    listOf("5", "10", "15", "20"),
                    listOf("1", "2", "3", "4"),
                    listOf("4", "5", "1", "2"),
                    listOf("0", "1", "2", "3"),
                    listOf("1", "2", "4", "5"),
                    listOf("2", "3", "5", "6"),
                    listOf("1", "2", "3", "4")
                )
            )
        ),
        "HTML" to mapOf(
            "basic" to mapOf(
                "Elemen dan Tag" to listOf(
                    listOf("Heading 1", "Heading 2", "Paragraf", "Gambar"),
                    listOf("Heading 1", "Heading 2", "Paragraf", "Gambar"),
                    listOf("Membuat link", "Membuat gambar", "Membuat tabel", "Membuat paragraf"),
                    listOf("Menampilkan teks jika gambar tidak bisa ditampilkan", "Menambah link", "Menambah gambar", "Menambah tabel"),
                    listOf("Daftar tidak berurutan", "Daftar berurutan", "Tabel", "Formulir"),
                    listOf("Daftar berurutan", "Daftar tidak berurutan", "Tabel", "Formulir"),
                    listOf("Paragraf dalam div", "Tabel", "Daftar tidak berurutan", "Formulir"),
                    listOf("Teks dalam span", "Paragraf dalam div", "Daftar tidak berurutan", "Formulir"),
                    listOf("Tabel", "Formulir", "Daftar tidak berurutan", "Daftar berurutan"),
                    listOf("Menampilkan placeholder saat input kosong", "Menambah link", "Menambah gambar", "Menambah tabel"),
                    listOf("Tombol", "Link", "Gambar", "Tabel"),
                    listOf("Teks area", "Formulir", "Daftar tidak berurutan", "Daftar berurutan"),
                    listOf("Judul", "Paragraf", "Daftar tidak berurutan", "Tabel"),
                    listOf("Hak cipta 2024", "Paragraf", "Daftar tidak berurutan", "Tabel"),
                    listOf("Navigasi", "Tabel", "Formulir", "Daftar tidak berurutan")
                ),
                "Atribut" to listOf(
                    listOf("Menampilkan teks alternatif jika gambar tidak bisa dimuat", "Menentukan sumber gambar", "Mengatur lebar gambar", "Menentukan tinggi gambar"),
                    listOf("Menentukan link tujuan", "Menambahkan style pada link", "Menentukan teks yang akan ditampilkan", "Menentukan ukuran teks link"),
                    listOf("Menentukan nilai awal pada input", "Menentukan tipe input", "Menentukan apakah input harus diisi", "Menentukan panjang maksimal input"),
                    listOf("Menonaktifkan tombol", "Menambahkan style pada tombol", "Menentukan teks yang akan ditampilkan pada tombol", "Menentukan ukuran tombol"),
                    listOf("Menentukan style inline untuk elemen", "Menentukan ID elemen", "Menentukan class elemen", "Menentukan nama elemen"),
                    listOf("Menandai checkbox sebagai dicentang", "Menentukan apakah checkbox harus diisi", "Menentukan tipe input", "Menambahkan style pada checkbox"),
                    listOf("Menentukan nilai minimum dan maksimum yang bisa dimasukkan", "Menentukan panjang maksimal input", "Menentukan tipe input", "Menentukan apakah input harus diisi"),
                    listOf("Menampilkan tooltip saat elemen dihover", "Menentukan ID elemen", "Menentukan style inline untuk elemen", "Menentukan class elemen"),
                    listOf("Menentukan lebar dan tinggi gambar", "Menentukan sumber gambar", "Menampilkan teks alternatif jika gambar tidak bisa dimuat", "Menentukan ID gambar"),
                    listOf("Menampilkan teks placeholder pada input", "Menentukan tipe input", "Menentukan nilai awal pada input", "Menentukan panjang maksimal input"),
                    listOf("Menentukan bagaimana link dibuka", "Menentukan style pada link", "Menentukan link tujuan", "Menentukan teks yang akan ditampilkan pada link"),
                    listOf("Menentukan hubungan antara dokumen dan sumber daya eksternal", "Menentukan style pada link", "Menentukan link tujuan", "Menentukan teks yang akan ditampilkan pada link"),
                    listOf("Menentukan pengkodean karakter untuk dokumen", "Menentukan style pada link", "Menentukan link tujuan", "Menentukan teks yang akan ditampilkan pada link"),
                    listOf("Menambahkan kontrol pemutaran pada audio", "Menambahkan style pada audio", "Menentukan sumber audio", "Menentukan tipe audio"),
                    listOf("Menambahkan kontrol pemutaran pada video", "Menambahkan style pada video", "Menentukan sumber video", "Menentukan tipe video")
                ),
                "Link dan Gambar" to listOf(
                    listOf("Pengguna akan pergi ke https://www.example.com", "Pengguna akan mengirim email", "Pengguna akan membuka gambar", "Pengguna akan menelpon nomor tertentu"),
                    listOf("Gambar dengan teks alternatif 'Gambar Contoh'", "Tautan ke image.jpg", "Paragraf dengan teks 'Gambar Contoh'", "Tabel dengan gambar di dalamnya"),
                    listOf("Membuka tautan di jendela/tab baru", "Menambah teks alternatif", "Mengatur ukuran gambar", "Mengubah gaya tautan"),
                    listOf("Pengguna akan diarahkan ke bagian dengan id 'section1'", "Pengguna akan membuka tab baru", "Pengguna akan mengirim email", "Pengguna akan melihat gambar"),
                    listOf("Mengatur ukuran gambar", "Menambah teks alternatif", "Menambah tautan ke gambar", "Mengubah gaya gambar"),
                    listOf("Membuka aplikasi email untuk mengirim email", "Mengirim email secara otomatis", "Membuka tab baru", "Menambah teks alternatif"),
                    listOf("Menampilkan tooltip ketika gambar dihover", "Menambah tautan ke gambar", "Mengubah ukuran gambar", "Mengatur gambar menjadi responsif"),
                    listOf("Pengguna akan diarahkan ke https://www.example.com", "Gambar akan diunduh", "Gambar akan diperbesar", "Gambar akan berubah ukuran"),
                    listOf("Membuka aplikasi telepon untuk melakukan panggilan", "Mengirim email", "Membuka tab baru", "Menambah teks alternatif"),
                    listOf("Gambar dengan border hitam", "Gambar dengan ukuran yang lebih besar", "Gambar dengan teks alternatif", "Gambar dengan link"),
                    listOf("Mengunduh file bernama file.zip", "Membuka tab baru", "Mengirim email", "Membuka aplikasi telepon"),
                    listOf("Membuat gambar responsif terhadap ukuran layar", "Mengatur ukuran gambar", "Menambah teks alternatif", "Mengubah gaya gambar"),
                    listOf("Menampilkan tooltip ketika tautan dihover", "Mengatur ukuran tautan", "Menambah teks alternatif", "Mengubah gaya tautan"),
                    listOf("Mengaitkan gambar dengan peta gambar", "Mengubah ukuran gambar", "Menambah teks alternatif", "Mengubah gaya gambar"),
                    listOf("Mendefinisikan area yang dapat diklik pada gambar", "Mengubah ukuran gambar", "Menambah teks alternatif", "Menambah tautan ke gambar")
                )
            )
        ),
        "CSS" to mapOf(
            "basic" to mapOf(
                "Selektor CSS" to listOf(
                    listOf("Warna teks dari semua paragraf menjadi merah", "Ukuran font dari semua paragraf menjadi 16px", "Warna latar belakang dari semua paragraf menjadi biru", "Teks dari semua paragraf menjadi tebal"),
                    listOf("Warna teks dari semua div menjadi merah", "Ukuran font dari semua div menjadi 16px", "Warna latar belakang dari semua div menjadi biru", "Teks dari semua div menjadi tebal"),
                    listOf("Warna teks dari elemen dengan id header menjadi merah", "Ukuran font dari elemen dengan id header menjadi 16px", "Warna latar belakang dari elemen dengan id header menjadi biru", "Teks dari elemen dengan id header menjadi tebal"),
                    listOf("Warna teks dari semua elemen dengan kelas highlight menjadi merah", "Ukuran font dari semua elemen dengan kelas highlight menjadi 16px", "Warna latar belakang dari semua elemen dengan kelas highlight menjadi biru", "Teks dari semua elemen dengan kelas highlight menjadi tebal"),
                    listOf("Warna teks dari semua link yang di-hover menjadi merah", "Ukuran font dari semua link yang di-hover menjadi 16px", "Warna latar belakang dari semua link yang di-hover menjadi biru", "Teks dari semua link yang di-hover menjadi bergaris bawah"),
                    listOf("Warna teks dari semua input tipe teks menjadi merah", "Ukuran font dari semua input tipe teks menjadi 16px", "Border dari semua input tipe teks menjadi hitam", "Teks dari semua input tipe teks menjadi tebal"),
                    listOf("Warna teks dari semua item dalam daftar menjadi merah", "Ukuran font dari semua item dalam daftar menjadi 16px", "List style dari semua item dalam daftar menjadi none", "Teks dari semua item dalam daftar menjadi tebal"),
                    listOf("Margin dari semua h1, h2, dan h3 menjadi 0", "Ukuran font dari semua h1, h2, dan h3 menjadi 16px", "Warna latar belakang dari semua h1, h2, dan h3 menjadi biru", "Teks dari semua h1, h2, dan h3 menjadi tebal"),
                    listOf("Lebar dari semua gambar yang sumbernya mengandung 'logo' menjadi 100px", "Tinggi dari semua gambar yang sumbernya mengandung 'logo' menjadi 100px", "Warna latar belakang dari semua gambar yang sumbernya mengandung 'logo' menjadi biru", "Teks dari semua gambar yang sumbernya mengandung 'logo' menjadi tebal"),
                    listOf("Opacity dari semua tombol yang dinonaktifkan menjadi 0.5", "Ukuran font dari semua tombol yang dinonaktifkan menjadi 16px", "Warna latar belakang dari semua tombol yang dinonaktifkan menjadi biru", "Teks dari semua tombol yang dinonaktifkan menjadi tebal"),
                    listOf("Margin atas dari paragraf pertama dalam elemen menjadi 0", "Ukuran font dari paragraf pertama dalam elemen menjadi 16px", "Warna latar belakang dari paragraf pertama dalam elemen menjadi biru", "Teks dari paragraf pertama dalam elemen menjadi tebal"),
                    listOf("Padding dari semua paragraf langsung di dalam div menjadi 10px", "Ukuran font dari semua paragraf langsung di dalam div menjadi 16px", "Warna latar belakang dari semua paragraf langsung di dalam div menjadi biru", "Teks dari semua paragraf langsung di dalam div menjadi tebal"),
                    listOf("Warna teks dari semua link yang targetnya '_blank' menjadi hijau", "Ukuran font dari semua link yang targetnya '_blank' menjadi 16px", "Warna latar belakang dari semua link yang targetnya '_blank' menjadi biru", "Teks dari semua link yang targetnya '_blank' menjadi tebal"),
                    listOf("Border atas dari setiap section yang langsung mengikuti section lain menjadi abu-abu", "Ukuran font dari setiap section yang langsung mengikuti section lain menjadi 16px", "Warna latar belakang dari setiap section yang langsung mengikuti section lain menjadi biru", "Teks dari setiap section yang langsung mengikuti section lain menjadi tebal"),
                    listOf("Display dari semua item dalam elemen container menjadi inline-block", "Ukuran font dari semua item dalam elemen container menjadi 16px", "Warna latar belakang dari semua item dalam elemen container menjadi biru", "Teks dari semua item dalam elemen container menjadi tebal")
                ),
                "Margin dan Padding" to listOf(
                    listOf("5px", "10px", "15px", "20px"),
                    listOf("10px", "20px", "30px", "40px"),
                    listOf("10px", "15px", "20px", "25px"),
                    listOf("5px", "10px", "15px", "20px"),
                    listOf("Memusatkan elemen secara horizontal", "Memusatkan elemen secara vertikal", "Tidak ada efek", "Mengatur margin menjadi 0"),
                    listOf("5%", "10%", "15%", "20%"),
                    listOf("1em 2em 3em 4em", "1em 2em 3em 1em", "2em 3em 4em 1em", "1em 2em 1em 3em"),
                    listOf("0 10px 20px 30px", "0 20px 10px 30px", "0 30px 20px 10px", "0 10px 30px 20px"),
                    listOf("Memusatkan elemen secara horizontal", "Memusatkan elemen secara vertikal", "Tidak ada efek", "Mengatur margin menjadi 0"),
                    listOf("10px", "15px", "20px", "25px"),
                    listOf("10px", "15px", "20px", "25px"),
                    listOf("5px 10px", "10px 5px", "10px 10px", "5px 5px"),
                    listOf("10px", "15px", "20px", "25px"),
                    listOf("15px 5px 5px 15px", "5px 15px 15px 5px", "15px 15px 5px 5px", "5px 5px 15px 15px"),
                    listOf("2rem 1rem", "1rem 2rem", "2rem 2rem", "1rem 1rem")
                ),
                "Position CSS" to listOf(
                    listOf("50px dari atas, 100px dari kiri", "50px dari atas, 100px dari kanan", "50px dari bawah, 100px dari kiri", "50px dari bawah, 100px dari kanan"),
                    listOf("20px dari atas elemen relatif", "20px dari bawah elemen relatif", "20px dari atas viewport", "20px dari bawah viewport"),
                    listOf("10px dari bawah viewport, 20px dari kanan viewport", "10px dari bawah elemen relatif, 20px dari kanan elemen relatif", "10px dari atas viewport, 20px dari kiri viewport", "10px dari atas elemen relatif, 20px dari kiri elemen relatif"),
                    listOf("Tetap di posisi 0px dari atas saat scrolling", "Tetap di posisi 0px dari bawah saat scrolling", "Tetap di posisi 0px dari kiri saat scrolling", "Tetap di posisi 0px dari kanan saat scrolling"),
                    listOf("0px dari bawah, 0px dari kanan", "0px dari atas, 0px dari kiri", "0px dari bawah, 0px dari kiri", "0px dari atas, 0px dari kanan"),
                    listOf("10px dari bawah elemen relatif, 20px dari kanan elemen relatif", "10px dari bawah viewport, 20px dari kanan viewport", "10px dari atas elemen relatif, 20px dari kiri elemen relatif", "10px dari atas viewport, 20px dari kiri viewport"),
                    listOf("50px dari atas viewport, 50px dari kiri viewport", "50px dari atas elemen relatif, 50px dari kiri elemen relatif", "50px dari bawah viewport, 50px dari kanan viewport", "50px dari bawah elemen relatif, 50px dari kanan elemen relatif"),
                    listOf("Tetap di posisi 0px dari bawah saat scrolling", "Tetap di posisi 0px dari atas saat scrolling", "Tetap di posisi 0px dari kiri saat scrolling", "Tetap di posisi 0px dari kanan saat scrolling"),
                    listOf("0px dari atas, 0px dari kanan", "0px dari bawah, 0px dari kiri", "0px dari atas, 0px dari kiri", "0px dari bawah, 0px dari kanan"),
                    listOf("10px dari atas elemen relatif, 10px dari kiri elemen relatif", "10px dari bawah elemen relatif, 10px dari kanan elemen relatif", "10px dari atas viewport, 10px dari kiri viewport", "10px dari bawah viewport, 10px dari kanan viewport"),
                    listOf("50px dari bawah viewport, 50px dari kiri viewport", "50px dari bawah elemen relatif, 50px dari kiri elemen relatif", "50px dari atas viewport, 50px dari kanan viewport", "50px dari atas elemen relatif, 50px dari kanan elemen relatif"),
                    listOf("Tetap di posisi 50px dari atas saat scrolling", "Tetap di posisi 50px dari bawah saat scrolling", "Tetap di posisi 50px dari kiri saat scrolling", "Tetap di posisi 50px dari kanan saat scrolling"),
                    listOf("50px dari bawah, 100px dari kiri", "50px dari atas, 100px dari kanan", "50px dari bawah, 100px dari kanan", "50px dari atas, 100px dari kiri"),
                    listOf("30px dari atas elemen relatif, 30px dari kanan elemen relatif", "30px dari bawah elemen relatif, 30px dari kiri elemen relatif", "30px dari atas viewport, 30px dari kanan viewport", "30px dari bawah viewport, 30px dari kiri viewport"),
                    listOf("0px dari atas, 0px dari kanan", "0px dari bawah, 0px dari kiri", "0px dari atas, 0px dari kiri", "0px dari bawah, 0px dari kanan")
                ),
                "Border CSS" to listOf(
                    listOf("2px solid black", "3px solid black", "2px dashed black", "3px dashed black"),
                    listOf("5px dashed blue", "5px solid blue", "5px dashed red", "5px solid red"),
                    listOf("3px dotted red", "2px dotted red", "3px solid red", "2px solid red"),
                    listOf("4px double green", "4px solid green", "3px double green", "3px solid green"),
                    listOf("1px solid orange", "2px solid orange", "1px dashed orange", "2px dashed orange"),
                    listOf("6px groove purple", "5px groove purple", "6px solid purple", "5px solid purple"),
                    listOf("2px outset blue", "3px outset blue", "2px solid blue", "3px solid blue"),
                    listOf("3px inset gray", "2px inset gray", "3px solid gray", "2px solid gray"),
                    listOf("medium none", "thick none", "thin none", "none"),
                    listOf("solid red", "dashed red", "solid blue", "dashed blue"),
                    listOf("thick", "medium", "thin", "none"),
                    listOf("thin dashed yellow", "thick dashed yellow", "thin solid yellow", "thick solid yellow"),
                    listOf("2px solid green yellow", "3px solid green yellow", "2px dashed green yellow", "3px dashed green yellow"),
                    listOf("5px ridge #0000FF", "5px solid #0000FF", "5px dashed #0000FF", "5px groove #0000FF"),
                    listOf("4px solid rgb(0, 255, 0)", "4px solid rgb(255, 0, 0)", "4px dashed rgb(0, 255, 0)", "4px dashed rgb(255, 0, 0)")
                ),
                "Properti Font dan Warna" to listOf(
                    listOf("red", "blue", "green", "black"),
                    listOf("24px", "18px", "20px", "16px"),
                    listOf("blue", "red", "green", "yellow"),
                    listOf("#00ff00", "#ff0000", "#0000ff", "#ffffff"),
                    listOf("Arial, sans-serif", "Times New Roman, serif", "Verdana, sans-serif", "Courier New, monospace"),
                    listOf("rgb(255, 0, 0)", "rgb(0, 255, 0)", "rgb(0, 0, 255)", "rgb(255, 255, 0)"),
                    listOf("#f0f0f0", "#ffffff", "#000000", "#ff0000"),
                    listOf("rgba(0, 0, 255, 0.5)", "rgba(255, 0, 0, 0.5)", "rgba(0, 255, 0, 0.5)", "rgba(255, 255, 0, 0.5)"),
                    listOf("2em", "1.5em", "1em", "2.5em"),
                    listOf("hsl(120, 100%, 50%)", "hsl(0, 100%, 50%)", "hsl(240, 100%, 50%)", "hsl(60, 100%, 50%)"),
                    listOf("bold", "normal", "light", "bolder"),
                    listOf("#ff00ff", "#00ffff", "#ffff00", "#0000ff"),
                    listOf("'Times New Roman', serif", "Arial, sans-serif", "Verdana, sans-serif", "Courier New, monospace"),
                    listOf("#333333", "#666666", "#999999", "#cccccc"),
                    listOf("italic", "normal", "bold", "underline")
                )
            )
        ),
        "JavaScript" to mapOf(
            "basic" to mapOf(
                "Dasar-dasar JavaScript" to listOf(
                    listOf("5", "10", "15", "0"),
                    listOf("'Hello, World!'", "'Hello'", "'World'", "'Hello, World'"),
                    listOf("15", "10", "5", "20"),
                    listOf("15", "10", "5", "20"),
                    listOf("'Hello World'", "'Hello'", "'World'", "'HelloWorld'"),
                    listOf("true", "false", "undefined", "null"),
                    listOf("5", "6", "4", "7"),
                    listOf("10", "9", "8", "11"),
                    listOf("true", "false", "undefined", "null"),
                    listOf("true", "false", "undefined", "null"),
                    listOf("true", "false", "undefined", "null"),
                    listOf("true", "false", "undefined", "null"),
                    listOf("true", "false", "undefined", "null"),
                    listOf("true", "false", "undefined", "null"),
                    listOf("10", "11", "9", "12")
                ),
                "Tipe Operator" to listOf(
                    listOf("5", "8", "10", "7"),
                    listOf("2", "4", "6", "3"),
                    listOf("12", "14", "16", "20"),
                    listOf("1", "2", "3", "4"),
                    listOf("0", "1", "2", "3"),
                    listOf("6", "8", "10", "12"),
                    listOf("true", "false", "undefined", "null"),
                    listOf("true", "false", "undefined", "null"),
                    listOf("true", "false", "undefined", "null"),
                    listOf("true", "false", "undefined", "null"),
                    listOf("true", "false", "undefined", "null"),
                    listOf("true", "false", "undefined", "null"),
                    listOf("true", "false", "undefined", "null"),
                    listOf("true", "false", "undefined", "null"),
                    listOf("true", "false", "undefined", "null")
                ),
                "Deklarasi Variabel" to listOf(
                    listOf("10", "20", "30", "15"),
                    listOf("10", "20", "30", "15"),
                    listOf("10", "20", "30", "15"),
                    listOf("5", "15", "10", "20"),
                    listOf("8", "18", "10", "20"),
                    listOf("12", "22", "10", "20"),
                    listOf("5", "25", "10", "20"),
                    listOf("Hello", "World", "JavaScript", "Hi"),
                    listOf("true", "false", "null", "undefined"),
                    listOf("null", "undefined", "0", "false"),
                    listOf("3.14", "2.71", "1.41", "0"),
                    listOf("JavaScript", "TypeScript", "HTML", "CSS"),
                    listOf("0", "1", "10", "100"),
                    listOf("false", "true", "null", "undefined"),
                    listOf("undefined", "null", "0", "false")
                ),
                "JSON" to listOf(
                    listOf("John", "30", "New York", "undefined"),
                    listOf("John", "30", "New York", "undefined"),
                    listOf("John", "30", "New York", "undefined"),
                    listOf("{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}", "{name: John, age: 30, city: New York}", "{John, 30, New York}", "{name: 'John', age: 30, city: 'New York'}"),
                    listOf("object", "string", "array", "undefined"),
                    listOf("{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}", "{name: John, age: 30, city: New York}", "{John, 30, New York}", "{name: 'John', age: 30, city: 'New York'}"),
                    listOf("John", "30", "New York", "undefined"),
                    listOf("John", "30", "New York", "undefined"),
                    listOf("John", "30", "New York", "undefined"),
                    listOf("John", "Anna", "30", "New York"),
                    listOf("New York", "London", "John", "Anna"),
                    listOf("1", "2", "3", "4"),
                    listOf("22", "30", "London", "John"),
                    listOf("John", "person", "New York", "undefined"),
                    listOf("John", "person", "New York", "undefined")
                )
            )
        )
    )

    private val correctAnswersMap = mapOf(
        "Python" to mapOf(
            "basic" to mapOf(
                "Tipe Data dan Variabel" to listOf(
                    "2",
                    "50",
                    "Alice is 25 years old",
                    "15",
                    "15",
                    "3",
                    "Hello World",
                    "25",
                    "25.0",
                    "3.0",
                    "2",
                    "bob",
                    "6",
                    "130",
                    "1",
                ),
                "Tipe Data List" to listOf(
                    "banana",
                    "[1, 2, 3, 4, 5, 6]",
                    "[\"a\", \"b\", \"d\"]",
                    "[10, 25, 30]",
                    "[1, 2, 3, 4, 5]",
                    "[\"item1\", \"item4\", \"item2\", \"item3\"]",
                    "[10, 20, 30, 40, 50]",
                    "[100, 300]",
                    "[5, 2, 3]",
                    "\"blue\"",
                    "[2, 3, 4]",
                    "[10, 20, 40]",
                    "True",
                    "[1, 3, 5, 9]",
                    "[[1, 2, 3], [4, 5, 6]]"
                ),
                "Tipe Data Tupple" to listOf(
                    "1",
                    "4",
                    "4",
                    "(2, 3)",
                    "(1, 2, 3, 4, 5)",
                    "(1, 2, 3, 4, 5, 6)",
                    "True",
                    "False",
                    "2",
                    "2",
                    "1",
                    "(1, 2, 3, 4, 5, 6)",
                    "(1, 2, 3, 4, 1, 2, 3, 4)",
                    "Error",
                    "1"
                ),
                "Input dan Output" to listOf(
                    "Hello, Alice",
                    "You are 30 years old",
                    "Sum: 7",
                    "Product: 10.0",
                    "Python-is-fun",
                    "First line Second line",
                    "My name is Alice and I am 25 years old",
                    "Hello Bob, you are 30 years old",
                    "Hello Charlie, you are 35 years old",
                    "The value of pi is approximately 3.14",
                    "Hello, David. You are 40.",
                    "The number you entered is 10",
                    "Learning*Python*is*easy!",
                    "Good...Morning",
                    "Nice to meet you, Eve!"
                ),
                "Percabangan" to listOf(
                    "Positive",
                    "Negative",
                    "x is greater than y",
                    "x is not greater than y",
                    "x is equal to y",
                    "x is greater than or equal to y",
                    "Odd",
                    "Zero",
                    "x is less than y",
                    "Adult",
                    "B",
                    "x is less than y",
                    "Weekday",
                    "Divisible by 2",
                    "Warm"
                ),
                "Perulangan" to listOf(
                    "0\n1\n2\n3\n4",
                    "15",
                    "1\n3\n5\n7\n9",
                    "5\n4\n3\n2\n1",
                    "0\n1\n2\n3\n4",
                    "5\n4\n3\n2\n1",
                    "0\n1\n2",
                    "0\n1\n2\n4",
                    "0 0\n0 1\n1 0\n1 1",
                    "0\n1\n2",
                    "0\n1\n2\n4",
                    "0 1\n1 2\n2 0\n2 1",
                    "*\n**\n***",
                    "1\n12\n123\n1234\n12345",
                    "0\n1\n2\nLoop completed"
                )
            ),
            "Intermediate" to mapOf(
                "Fungsi" to listOf(
                    "Hello, Alice!",
                    "5",
                    "120",
                    "True",
                    "[1, 4, 9, 16]",
                    "10",
                    "15",
                    "olleh",
                    "8",
                    "1",
                    "2",
                    "12",
                    "True",
                    "Hi, Bob!",
                    "8"
                ),
                "Recursive Function" to listOf(
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " "
                ),
                "Lambda Function" to listOf(
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " "
                ),
                "Recursive Function" to listOf(
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " ",
                    " "
                )
            )
        ),
        "Kotlin" to mapOf(
            "basic" to mapOf(
                "Activity" to listOf(
                    "Menginisialisasi activity",
                    "Setelah onCreate",
                    "Setelah onStart",
                    "Menghentikan operasi saat activity di-pause",
                    "Setelah onPause",
                    "Membersihkan sumber daya",
                    "Setelah onStop",
                    "Menjalankan operasi saat tombol ditekan",
                    "Menyimpan status instance",
                    "Memuat status instance yang disimpan",
                    "Menangani back press",
                    "Menambahkan fragment ke activity",
                    "Meng-inflate menu ke activity",
                    "Menangani item menu yang dipilih",
                    "Menangani hasil dari activity lain"
                ),
                "Intent" to listOf(
                    "Memulai SecondActivity",
                    "Membuka halaman web",
                    "Memulai dialer",
                    "Mengirim teks",
                    "Memilih gambar",
                    "Memulai kamera",
                    "Mengirim data ke SecondActivity",
                    "Memulai SecondActivity dengan task baru",
                    "Menghapus semua activity di atas SecondActivity",
                    "Mengirim data ke SecondActivity dan menunggu hasil",
                    "Mengirim email",
                    "Membuka lokasi di peta",
                    "Membuka pengaturan perangkat",
                    "Mengirim gambar",
                    "Mengirim daftar Parcelable ke SecondActivity"
                ),
                "View dan ViewGroup" to listOf(
                    "Membuat TextView dengan teks 'Hello, World!'",
                    "Membuat Button dengan teks 'Click Me' dan menampilkan Toast saat diklik",
                    "Membuat LinearLayout dengan orientasi vertikal",
                    "Menambahkan TextView ke RelativeLayout",
                    "Menambahkan Button ke FrameLayout",
                    "Menambahkan TextView ke ConstraintLayout",
                    "Mengatur layoutParams untuk TextView",
                    "Mengatur gambar untuk ImageView",
                    "Membuat EditText dengan hint 'Enter your name'",
                    "Menambahkan TextView ke ScrollView",
                    "Mengatur jumlah baris dan kolom untuk GridLayout",
                    "Mengatur layoutManager untuk RecyclerView",
                    "Mengatur adapter untuk ListView",
                    "Menambahkan TextView ke CardView",
                    "Menambahkan TextView dan Button ke LinearLayout dengan orientasi horizontal"
                ),
                "Style dan Theme" to listOf(
                    "Mengatur tampilan teks pada TextView menggunakan style 'MyTextStyle'",
                    "Mengatur latar belakang Button menggunakan resource 'my_button_background'",
                    "Mengatur tampilan teks pada TextView menggunakan style 'MyTextStyle'",
                    "Mengatur tampilan teks pada TextView menggunakan tema 'MyTextStyle'",
                    "Mengatur tampilan Button menggunakan tema 'MyButtonStyle'",
                    "Mengatur tampilan LinearLayout menggunakan tema 'MyLinearLayoutStyle'",
                    "Mengatur tampilan EditText menggunakan style 'MyEditTextStyle'",
                    "Mengatur warna teks pada TextView menggunakan warna 'myTextColor'",
                    "Mengatur latar belakang Button menggunakan warna 'myButtonColor'",
                    "Mengatur ukuran teks pada TextView menjadi 18sp",
                    "Mengatur gambar pada ImageView menggunakan resource 'my_image'",
                    "Mengatur font pada TextView menggunakan font 'myFont'",
                    "Mengatur jenis huruf pada TextView menjadi 'sans-serif-light'",
                    "Mengatur padding pada TextView menjadi 16dp",
                    "Mengatur orientasi LinearLayout menjadi horizontal dan padding menjadi 16dp"
                ),
                "Recycler View" to listOf(
                    "Mengatur layout manager menjadi LinearLayoutManager",
                    "Mengatur layout manager menjadi GridLayoutManager dengan 2 kolom",
                    "Mengatur layout manager menjadi StaggeredGridLayoutManager dengan 2 kolom",
                    "Mengatur adapter untuk RecyclerView",
                    "Mengatur adapter untuk RecyclerView",
                    "Mengatur RecyclerView agar memiliki ukuran tetap",
                    "Menambahkan DividerItemDecoration ke RecyclerView",
                    "Mengatur item animator untuk RecyclerView",
                    "Menambahkan swipe to delete ke RecyclerView",
                    "Menambahkan snap helper ke RecyclerView",
                    "Menambahkan scroll listener ke RecyclerView",
                    "Mengatur adapter untuk RecyclerView dan memperbarui data",
                    "Mengatur layout manager menjadi LinearLayoutManager horizontal",
                    "Mengatur adapter dan layout manager untuk RecyclerView",
                    "Mengatur ViewHolder untuk RecyclerView"
                )
            )
        ),
        "Dart" to mapOf(
            "basic" to mapOf(
                "Fungsi Input dan Output" to listOf(
                    "Menampilkan output tanpa baris baru",
                    "Mengubah input menjadi integer",
                    "Membaca input dari pengguna",
                    "(suhuCelsius * 9/5) + 32",
                    "Panjang kalimat: 11",
                    "Mengalikan angka dengan dirinya sendiri",
                    "Memisahkan kata menjadi karakter-karakter terbalik",
                    "harga * 0.9",
                    "Menghitung rata-rata dari dua nilai",
                    "Menggunakan split(' ')",
                    "Mengubah double menjadi integer",
                    "Nama lengkap: John Doe",
                    "Mengubah kata menjadi huruf besar",
                    "Menghitung total harga",
                    "Angka tersebut adalah ganjil"
                ),
                "Operator" to listOf(
                    "13",
                    "10",
                    "42",
                    "5",
                    "1",
                    "6",
                    "7",
                    "false",
                    "true",
                    "true",
                    "true",
                    "true",
                    "false",
                    "true",
                    "2"
                )
            )
        ),
        "Java" to mapOf(
            "basic" to mapOf(
                "Variabel dan Tipe Data" to listOf(
                    "5",
                    "5.5",
                    "A",
                    "true",
                    "Hello",
                    "30",
                    "31.0",
                    "Hello World",
                    "25",
                    "5.5",
                    "100000",
                    "100",
                    "1000",
                    "5",
                    "1"
                ),
                "Operator" to listOf(
                    "15",
                    "15",
                    "20",
                    "5",
                    "1",
                    "6",
                    "4",
                    "false",
                    "true",
                    "true",
                    "true",
                    "true",
                    "false",
                    "true",
                    "true"
                ),
                "Percabangan" to listOf(
                    "x lebih besar dari 5",
                    "x lebih kecil dari 5",
                    "x sama dengan 5",
                    "x tidak sama dengan 5",
                    "x lebih besar atau sama dengan 2",
                    "x lebih kecil atau sama dengan 5",
                    "x lebih besar dari 5",
                    "x lebih kecil dari 5",
                    "x sama dengan 5",
                    "x tidak sama dengan 5",
                    "x lebih besar atau sama dengan 2",
                    "x lebih kecil atau sama dengan 5",
                    "x lebih besar dari 5",
                    "x lebih kecil dari 5",
                    "x sama dengan 5"
                ),
                "Perulangan" to listOf(
                    "0 1 2 3 4",
                    "0 1 2 3 4",
                    "0 1 2 3 4",
                    "0 2 4 6 8",
                    "5 4 3 2 1",
                    "10 9 8 7 6",
                    "10 9 8 7 6",
                    "1 4 9 16 25",
                    "1 3 5",
                    "2",
                    "1 2 3 4 5 6 7 8 9",
                    "0 1 2 3 4 5",
                    "0 1 2 1 2 3 2 3 4",
                    "0 1 2 4",
                    "0 1 2"
                ),
                "Struktur Data Array" to listOf(
                    "1",
                    "3",
                    "5",
                    "5",
                    "10",
                    "15",
                    "0",
                    "6",
                    "10",
                    "2",
                    "5",
                    "1",
                    "5",
                    "3",
                    "1"
                )
            )
        ),
        "HTML" to mapOf(
            "basic" to mapOf(
                "Elemen dan Tag" to listOf(
                    "Heading 1",
                    "Paragraf",
                    "Membuat link",
                    "Menampilkan teks jika gambar tidak bisa ditampilkan",
                    "Daftar tidak berurutan",
                    "Daftar berurutan",
                    "Paragraf dalam div",
                    "Teks dalam span",
                    "Tabel",
                    "Menampilkan placeholder saat input kosong",
                    "Tombol",
                    "Teks area",
                    "Judul",
                    "Hak cipta 2024",
                    "Navigasi"
                ),
                "Atribut" to listOf(
                    "Menampilkan teks alternatif jika gambar tidak bisa dimuat",
                    "Menentukan link tujuan",
                    "Menentukan nilai awal pada input",
                    "Menonaktifkan tombol",
                    "Menentukan style inline untuk elemen",
                    "Menandai checkbox sebagai dicentang",
                    "Menentukan nilai minimum dan maksimum yang bisa dimasukkan",
                    "Menampilkan tooltip saat elemen dihover",
                    "Menentukan lebar dan tinggi gambar",
                    "Menampilkan teks placeholder pada input",
                    "Menentukan bagaimana link dibuka",
                    "Menentukan hubungan antara dokumen dan sumber daya eksternal",
                    "Menentukan pengkodean karakter untuk dokumen",
                    "Menambahkan kontrol pemutaran pada audio",
                    "Menambahkan kontrol pemutaran pada video"
                ),
                "Link dan Gambar" to listOf(
                    "Pengguna akan pergi ke https://www.example.com",
                    "Gambar dengan teks alternatif 'Gambar Contoh'",
                    "Membuka tautan di jendela/tab baru",
                    "Pengguna akan diarahkan ke bagian dengan id 'section1'",
                    "Mengatur ukuran gambar",
                    "Membuka aplikasi email untuk mengirim email",
                    "Menampilkan tooltip ketika gambar dihover",
                    "Pengguna akan diarahkan ke https://www.example.com",
                    "Membuka aplikasi telepon untuk melakukan panggilan",
                    "Gambar dengan border hitam",
                    "Mengunduh file bernama file.zip",
                    "Membuat gambar responsif terhadap ukuran layar",
                    "Menampilkan tooltip ketika tautan dihover",
                    "Mengaitkan gambar dengan peta gambar",
                    "Mendefinisikan area yang dapat diklik pada gambar"
                )
            )
        ),
        "CSS" to mapOf(
            "basic" to mapOf(
                "Selektor CSS" to listOf(
                    "Warna teks dari semua paragraf menjadi merah",
                    "Ukuran font dari semua div menjadi 16px",
                    "Warna latar belakang dari elemen dengan id header menjadi biru",
                    "Teks dari semua elemen dengan kelas highlight menjadi tebal",
                    "Teks dari semua link yang di-hover menjadi bergaris bawah",
                    "Border dari semua input tipe teks menjadi hitam",
                    "List style dari semua item dalam daftar menjadi none",
                    "Margin dari semua h1, h2, dan h3 menjadi 0",
                    "Lebar dari semua gambar yang sumbernya mengandung 'logo' menjadi 100px",
                    "Opacity dari semua tombol yang dinonaktifkan menjadi 0.5",
                    "Margin atas dari paragraf pertama dalam elemen menjadi 0",
                    "Padding dari semua paragraf langsung di dalam div menjadi 10px",
                    "Warna teks dari semua link yang targetnya '_blank' menjadi hijau",
                    "Border atas dari setiap section yang langsung mengikuti section lain menjadi abu-abu",
                    "Display dari semua item dalam elemen container menjadi inline-block"
                ),
                "Margin dan Padding" to listOf(
                    "10px",
                    "20px",
                    "15px",
                    "10px",
                    "Memusatkan elemen secara horizontal",
                    "5% 10%",
                    "1em 2em 3em 4em",
                    "0 30px 20px 10px",
                    "Memusatkan elemen secara horizontal",
                    "15px",
                    "20px",
                    "10px 5px",
                    "10px",
                    "15px 5px 5px 15px",
                    "2rem 1rem"
                ),
                "Position CSS" to listOf(
                    "50px dari atas, 100px dari kiri",
                    "20px dari atas elemen relatif",
                    "10px dari bawah viewport, 20px dari kanan viewport",
                    "Tetap di posisi 0px dari atas saat scrolling",
                    "0px dari bawah, 0px dari kanan",
                    "10px dari bawah elemen relatif, 20px dari kanan elemen relatif",
                    "50px dari atas viewport, 50px dari kiri viewport",
                    "Tetap di posisi 0px dari bawah saat scrolling",
                    "0px dari atas, 0px dari kanan",
                    "10px dari atas elemen relatif, 10px dari kiri elemen relatif",
                    "50px dari bawah viewport, 50px dari kiri viewport",
                    "Tetap di posisi 50px dari atas saat scrolling",
                    "50px dari bawah, 100px dari kiri",
                    "30px dari atas elemen relatif, 30px dari kanan elemen relatif",
                    "0px dari atas, 0px dari kanan"
                ),
                "Border CSS" to listOf(
                    "2px solid black",
                    "5px dashed blue",
                    "3px dotted red",
                    "4px double green",
                    "1px solid orange",
                    "6px groove purple",
                    "2px outset blue",
                    "3px inset gray",
                    "medium none",
                    "solid red",
                    "thick",
                    "thin dashed yellow",
                    "2px solid green yellow",
                    "5px ridge #0000FF",
                ),
                "Properti Font dan Warna" to listOf(
                    "red",
                    "24px",
                    "blue",
                    "#00ff00",
                    "Arial, sans-serif",
                    "rgb(255, 0, 0)",
                    "#f0f0f0",
                    "rgba(0, 0, 255, 0.5)",
                    "2em",
                    "hsl(120, 100%, 50%)",
                    "bold",
                    "#ff00ff",
                    "'Times New Roman', serif",
                    "#333333",
                    "italic"
                )
            )
        ),
        "JavaScript" to mapOf(
            "basic" to mapOf(
                "Dasar-dasar JavaScript" to listOf(
                    "5",
                    "'Hello, World!'",
                    "15",
                    "15",
                    "'Hello World'",
                    "true",
                    "6",
                    "9",
                    "true",
                    "true",
                    "true",
                    "false",
                    "true",
                    "true",
                    "10"
                ),
                "Tipe Operator" to listOf(
                    "8",
                    "4",
                    "14",
                    "2",
                    "1",
                    "8",
                    "true",
                    "false",
                    "true",
                    "true",
                    "true",
                    "false",
                    "false",
                    "true",
                    "false"
                ),
                "Deklarasi Variabel" to listOf(
                    "10",
                    "20",
                    "30",
                    "15",
                    "8",
                    "22",
                    "25",
                    "Hello",
                    "true",
                    "null",
                    "3.14",
                    "JavaScript",
                    "0",
                    "false",
                    "undefined"
                ),
                "JSON" to listOf(
                    "John",
                    "30",
                    "New York",
                    "{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}",
                    "string",
                    "{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}",
                    "John",
                    "30",
                    "New York",
                    "Anna",
                    "New York",
                    "2",
                    "22",
                    "John",
                    "New York"
                )
            )
        )
    )

    fun getQuestions(language: String, level: String, title: String): List<String> {
        return questionsMap[language]?.get(level)?.get(title) ?: emptyList()
    }

    fun getChoices(language: String, level: String, title: String): List<List<String>> {
        return choicesMap[language]?.get(level)?.get(title) ?: emptyList()
    }

    fun getCorrectAnswers(language: String, level: String, title: String): List<String> {
        return correctAnswersMap[language]?.get(level)?.get(title) ?: emptyList()
    }

    fun getScripts(language: String, level: String, title: String): List<String> {
        return scriptsMap[language]?.get(level)?.get(title) ?: emptyList()
    }
}
